name: Run Security

on:
  push:
    branches:
      - main

env:
  SECURITY_SCAN_API_BASE: 'https://12a7-45-252-74-134.ngrok-free.app/v1/startSecurityScan'
  PROJECT_ID: 'a3089edd-2207-4875-9f3b-6415afa56bb2'

  BLOCK_PIPELINE: 'true'
  BLOCK_CRITICAL: 'true'
  BLOCK_HIGH: 'true'
  BLOCK_MEDIUM: 'true'

  CRITICAL_THRESHOLD: '3'
  HIGH_THRESHOLD: '2'
  MEDIUM_THRESHOLD: '1'

  INTEGRATION_ID: 'c45aede5-68b6-435e-832a-02bda7d39832'

jobs:
  security-scan:
    runs-on: windows-latest

    steps:
      - name: Run Security Scan API
        shell: pwsh
        run: |
          Write-Host "Calling Security Scan API..."

          $apiUrl = "$env:SECURITY_SCAN_API_BASE/$env:PROJECT_ID"
          Write-Host "Final API URL: $apiUrl"

          $curlCommand = "curl.exe -s -X POST --header "Content-Type: application/json" --header "Api-Key: $env:INTEGRATION_ID" "$apiUrl""
          Write-Host "Executing: $curlCommand"
          $response = Invoke-Expression $curlCommand

          if (!$response) {
            throw "No response received from API."
          }

          $responseJson = $response | ConvertFrom-Json
          $rawJson = $response | ConvertTo-Json -Depth 10
          Write-Host "Scan Response: $rawJson"

          if ($rawJson -match '"message"\s*:\s*"token expired"') {
            throw "Token expired. Pipeline blocked immediately."
          }

          $critical = $responseJson.criticalCount
          $high     = $responseJson.highCount
          $medium   = $responseJson.mediumCount

          Write-Host "Severity Summary:"
          Write-Host "Critical: $critical"
          Write-Host "High: $high"
          Write-Host "Medium: $medium"

          if ($env:BLOCK_PIPELINE -eq 'true') {
            if ($env:BLOCK_CRITICAL -eq 'true' -and $critical -ge [int]$env:CRITICAL_THRESHOLD) {
              throw "Blocked due to Critical vulnerabilities exceeding threshold"
            }
            if ($env:BLOCK_HIGH -eq 'true' -and $high -ge [int]$env:HIGH_THRESHOLD) {
              throw "Blocked due to High vulnerabilities exceeding threshold"
            }
            if ($env:BLOCK_MEDIUM -eq 'true' -and $medium -ge [int]$env:MEDIUM_THRESHOLD) {
              throw "Blocked due to Medium vulnerabilities exceeding threshold"
            }
            Write-Host "No blocking severity thresholds exceeded. Pipeline continued."
          } else {
            Write-Host "Blocking disabled. Continuing pipeline regardless of severity."
          }

      - name: Post-processing
        run: echo "Post-processing steps completed."
