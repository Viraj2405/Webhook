trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  securityScanApi: 'https://969f-114-143-234-6.ngrok-free.app/v1/startSecurityScan'
  projectId: 'a3089edd-2207-4875-9f3b-6415afa56bb2'
  integrationId: 'c90a80bb-514e-4f9c-9b5a-155c8e3f32ae'
  blockPipeline: 'true'
  blockCritical: 'true'
  blockHigh: 'true'
  blockMedium: 'true'
  criticalThreshold: 6
  highThreshold: 5
  mediumThreshold: 4

stages:
- stage: SecurityScan
  jobs:
  - job: RunSecurityScan
    steps:
    - script: |
        echo "Running Security Scan..."

        response=$(curl -s -X POST "$(securityScanApi)/$(projectId)" \
          -H "Content-Type: application/json" \
          -H "Api-Key: $(integrationId)")

        echo "Raw response: $response"

        if [[ "$response" == *'"message":"token expired"'* ]]; then
          echo "Token expired. Failing the pipeline."
          exit 1
        fi

        critical=$(echo "$response" | grep -o '"criticalCount":[0-9]*' | cut -d':' -f2)
        high=$(echo "$response" | grep -o '"highCount":[0-9]*' | cut -d':' -f2)
        medium=$(echo "$response" | grep -o '"mediumCount":[0-9]*' | cut -d':' -f2)

        echo "Critical vulnerabilities: $critical"
        echo "High vulnerabilities: $high"
        echo "Medium vulnerabilities: $medium"

        if [[ "$(blockPipeline)" == "true" ]]; then
          if [[ "$(blockCritical)" == "true" && "$critical" -ge "$(criticalThreshold)" ]]; then
            echo "Blocking: Critical threshold exceeded"
            exit 1
          fi
          if [[ "$(blockHigh)" == "true" && "$high" -ge "$(highThreshold)" ]]; then
            echo
