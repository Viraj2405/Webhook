{
	"info": {
		"_postman_id": "e95333b6-f43d-43b7-8d53-c64ee5562381",
		"name": "Pipedrive API v1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23236759",
		"_collection_link": "https://www.postman.com/pipedrive-developers/pipedrive-api-collection/collection/aw2y932/pipedrive-api-v1?action=share&source=collection_link&creator=23236759"
	},
	"item": [
		{
			"name": "Activities",
			"item": [
				
				{
					"name": "Get details of an activity",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activities/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the activity"
								}
							]
						},
						"description": "Returns the details of a specific activity."
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the activity"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"company_id\": 22122,\n    \"user_id\": 1234,\n    \"done\": false,\n    \"type\": \"deadline\",\n    \"reference_type\": \"scheduler-service\",\n    \"reference_id\": 7,\n    \"conference_meeting_client\": \"871b8bc88d3a1202\",\n    \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n    \"conference_meeting_id\": \"17058746701\",\n    \"due_date\": \"2020-06-09\",\n    \"due_time\": \"10:00\",\n    \"duration\": \"01:00\",\n    \"busy_flag\": true,\n    \"add_time\": \"2020-06-08 12:37:56\",\n    \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n    \"last_notification_time\": \"2020-08-08 12:37:56\",\n    \"last_notification_user_id\": 7655,\n    \"notification_language_id\": 1,\n    \"subject\": \"Deadline\",\n    \"public_description\": \"This is a description\",\n    \"calendar_sync_include_context\": \"\",\n    \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n    \"org_id\": 5,\n    \"person_id\": 1101,\n    \"deal_id\": 300,\n    \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n    \"project_id\": null,\n    \"active_flag\": true,\n    \"update_time\": \"2020-08-08 12:37:56\",\n    \"update_user_id\": 5596,\n    \"gcal_event_id\": \"\",\n    \"google_calendar_id\": \"\",\n    \"google_calendar_etag\": \"\",\n    \"source_timezone\": \"\",\n    \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n    \"rec_rule_extension\": \"\",\n    \"rec_master_activity_id\": 1,\n    \"series\": [],\n    \"note\": \"A note for the activity\",\n    \"created_by_user_id\": 1234,\n    \"location_subpremise\": \"\",\n    \"location_street_number\": \"3\",\n    \"location_route\": \"Mustamäe tee\",\n    \"location_sublocality\": \"Kristiine\",\n    \"location_locality\": \"Tallinn\",\n    \"location_admin_area_level_1\": \"Harju maakond\",\n    \"location_admin_area_level_2\": \"\",\n    \"location_country\": \"Estonia\",\n    \"location_postal_code\": \"10616\",\n    \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n    \"attendees\": [\n      {\n        \"email_address\": \"attendee@pipedrivemail.com\",\n        \"is_organizer\": 0,\n        \"name\": \"Attendee\",\n        \"person_id\": 25312,\n        \"status\": \"noreply\",\n        \"user_id\": null\n      }\n    ],\n    \"participants\": [\n      {\n        \"person_id\": 17985,\n        \"primary_flag\": false\n      },\n      {\n        \"person_id\": 1101,\n        \"primary_flag\": true\n      }\n    ],\n    \"org_name\": \"Organization\",\n    \"person_name\": \"Person\",\n    \"deal_title\": \"Deal\",\n    \"owner_name\": \"Creator\",\n    \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n    \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n    \"assigned_to_user_id\": 1235,\n    \"file\": {\n      \"id\": \"376892,\",\n      \"clean_name\": \"Audio 10:55:07.m4a\",\n      \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"1234\": {\n        \"id\": 1234,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"deal\": {\n      \"300\": {\n        \"id\": 300,\n        \"title\": \"Deal\",\n        \"status\": \"open\",\n        \"value\": 856,\n        \"currency\": \"EUR\",\n        \"stage_id\": 1,\n        \"pipeline_id\": 1\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update an activity",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"due_date\": \"<date>\",\n  \"due_time\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"person_id\": \"<integer>\",\n  \"project_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"location\": \"<string>\",\n  \"public_description\": \"<string>\",\n  \"note\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"type\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"participants\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"busy_flag\": \"<boolean>\",\n  \"attendees\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"done\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/activities/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the activity"
								}
							]
						},
						"description": "Updates an activity. Includes `more_activities_scheduled_in_context` property in response's `additional_data` which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data). <br /> <br /> ***Starting from 30.09.2024, activity attendees will receive updates only if the activity owner has an active calendar sync***"
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"due_date\": \"<date>\",\n  \"due_time\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"person_id\": \"<integer>\",\n  \"project_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"location\": \"<string>\",\n  \"public_description\": \"<string>\",\n  \"note\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"type\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"participants\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"busy_flag\": \"<boolean>\",\n  \"attendees\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"done\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activities/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the activity"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"company_id\": 22122,\n    \"user_id\": 1234,\n    \"done\": false,\n    \"type\": \"deadline\",\n    \"reference_type\": \"scheduler-service\",\n    \"reference_id\": 7,\n    \"conference_meeting_client\": \"871b8bc88d3a1202\",\n    \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n    \"conference_meeting_id\": \"17058746701\",\n    \"due_date\": \"2020-06-09\",\n    \"due_time\": \"10:00\",\n    \"duration\": \"01:00\",\n    \"busy_flag\": true,\n    \"add_time\": \"2020-06-08 12:37:56\",\n    \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n    \"last_notification_time\": \"2020-08-08 12:37:56\",\n    \"last_notification_user_id\": 7655,\n    \"notification_language_id\": 1,\n    \"subject\": \"Deadline\",\n    \"public_description\": \"This is a description\",\n    \"calendar_sync_include_context\": \"\",\n    \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n    \"org_id\": 5,\n    \"person_id\": 1101,\n    \"deal_id\": 300,\n    \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n    \"project_id\": null,\n    \"active_flag\": true,\n    \"update_time\": \"2020-08-08 12:37:56\",\n    \"update_user_id\": 5596,\n    \"gcal_event_id\": \"\",\n    \"google_calendar_id\": \"\",\n    \"google_calendar_etag\": \"\",\n    \"source_timezone\": \"\",\n    \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n    \"rec_rule_extension\": \"\",\n    \"rec_master_activity_id\": 1,\n    \"series\": [],\n    \"note\": \"A note for the activity\",\n    \"created_by_user_id\": 1234,\n    \"location_subpremise\": \"\",\n    \"location_street_number\": \"3\",\n    \"location_route\": \"Mustamäe tee\",\n    \"location_sublocality\": \"Kristiine\",\n    \"location_locality\": \"Tallinn\",\n    \"location_admin_area_level_1\": \"Harju maakond\",\n    \"location_admin_area_level_2\": \"\",\n    \"location_country\": \"Estonia\",\n    \"location_postal_code\": \"10616\",\n    \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n    \"attendees\": [\n      {\n        \"email_address\": \"attendee@pipedrivemail.com\",\n        \"is_organizer\": 0,\n        \"name\": \"Attendee\",\n        \"person_id\": 25312,\n        \"status\": \"noreply\",\n        \"user_id\": null\n      }\n    ],\n    \"participants\": [\n      {\n        \"person_id\": 17985,\n        \"primary_flag\": false\n      },\n      {\n        \"person_id\": 1101,\n        \"primary_flag\": true\n      }\n    ],\n    \"org_name\": \"Organization\",\n    \"person_name\": \"Person\",\n    \"deal_title\": \"Deal\",\n    \"owner_name\": \"Creator\",\n    \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n    \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n    \"assigned_to_user_id\": 1235,\n    \"file\": {\n      \"id\": \"376892,\",\n      \"clean_name\": \"Audio 10:55:07.m4a\",\n      \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"1234\": {\n        \"id\": 1234,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"active_flag\": true\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"active_flag\": true,\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"deal\": {\n      \"300\": {\n        \"id\": 300,\n        \"title\": \"Deal\",\n        \"status\": \"open\",\n        \"value\": 856,\n        \"currency\": \"EUR\",\n        \"stage_id\": 1,\n        \"pipeline_id\": 1\n      }\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Activities are appointments/tasks/events on a calendar that can be associated with a deal, a lead, a person and an organization. Activities can be of different type (such as call, meeting, lunch or a custom type - see ActivityTypes object) and can be assigned to a particular user. Note that activities can also be created without a specific date/time.\n"
		},
		{
			"name": "ActivityFields",
			"item": [
				{
					"name": "Get all activity fields",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activityFields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activityFields"
							]
						},
						"description": "Returns all activity fields."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activityFields?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activityFields"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"key\": \"title\",\n      \"name\": \"Title\",\n      \"order_nr\": 2,\n      \"field_type\": \"varchar\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": true,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": null,\n      \"mandatory_flag\": true\n    },\n    {\n      \"id\": 2,\n      \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n      \"name\": \"Customer Type\",\n      \"order_nr\": 1,\n      \"field_type\": \"enum\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": true,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": false,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": [\n        {\n          \"id\": 190,\n          \"label\": \"Private person\"\n        },\n        {\n          \"id\": 191,\n          \"label\": \"Company\"\n        },\n        {\n          \"id\": 192,\n          \"label\": \"Government\"\n        }\n      ],\n      \"mandatory_flag\": true\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Activity fields represent different fields that an activity has.\n"
		},
		{
			"name": "ActivityTypes",
			"item": [
				
				{
					"name": "Add new activity type",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"icon_key\": \"<string>\",\n  \"color\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/activityTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activityTypes"
							]
						},
						"description": "Adds a new activity type."
					},
					"response": [
						{
							"name": "The activity type was successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"call\",\n  \"icon_key\": \"<string>\",\n  \"color\": \"FFFFFF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activityTypes?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activityTypes"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12,\n    \"order_nr\": 1,\n    \"name\": \"Video call\",\n    \"key_string\": \"video_call\",\n    \"icon_key\": \"camera\",\n    \"active_flag\": true,\n    \"color\": \"aeb31b\",\n    \"is_custom_flag\": true,\n    \"add_time\": \"2020-09-01 10:16:23\",\n    \"update_time\": \"2020-09-01 10:16:23\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete an activity type",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activityTypes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activityTypes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the activity type"
								}
							]
						},
						"description": "Marks an activity type as deleted."
					},
					"response": [
						{
							"name": "The activity type was successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activityTypes/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activityTypes",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the activity type"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12,\n    \"order_nr\": 1,\n    \"name\": \"Video call\",\n    \"key_string\": \"video_call\",\n    \"icon_key\": \"camera\",\n    \"active_flag\": false,\n    \"color\": \"aeb31b\",\n    \"is_custom_flag\": true,\n    \"add_time\": \"2020-09-01 10:16:23\",\n    \"update_time\": \"2020-09-01 19:59:59\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update an activity type",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"icon_key\": \"<string>\",\n  \"color\": \"<string>\",\n  \"order_nr\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/activityTypes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activityTypes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the activity type"
								}
							]
						},
						"description": "Updates an activity type."
					},
					"response": [
						{
							"name": "The activity type was successfully updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"icon_key\": \"<string>\",\n  \"color\": \"<string>\",\n  \"order_nr\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activityTypes/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activityTypes",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the activity type"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12,\n    \"order_nr\": 1,\n    \"name\": \"Video call\",\n    \"key_string\": \"video_call\",\n    \"icon_key\": \"camera\",\n    \"active_flag\": true,\n    \"color\": \"aeb31b\",\n    \"is_custom_flag\": true,\n    \"add_time\": \"2020-09-01 10:16:23\",\n    \"update_time\": \"2020-09-01 14:12:09\"\n  }\n}"
						}
					]
				}
			],
			"description": "Activity types represent different kinds of activities that can be stored. Each activity type is presented to the user with an icon and a name. Additionally, a color can be defined (not implemented in the Pipedrive app as of today). Activity types are linked to activities via `ActivityType.key_string = Activity.type`. The `key_string` will be generated by the API based on the given name of the activity type upon creation, and cannot be changed. Activity types should be presented to the user in an ordered manner, using the `ActivityType.order_nr` value.\n"
		},
		{
			"name": "Oauth",
			"item": [
				{
					"name": "Requesting authorization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html"
							}
						],
						"url": {
							"raw": "https://oauth.pipedrive.com/oauth/authorize?client_id=<string>&redirect_uri=<string>&state=<string>",
							"protocol": "https",
							"host": [
								"oauth",
								"pipedrive",
								"com"
							],
							"path": [
								"oauth",
								"authorize"
							],
							"query": [
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) The client ID provided to you by the Pipedrive Marketplace when you register your app"
								},
								{
									"key": "redirect_uri",
									"value": "<string>",
									"description": "(Required) The callback URL you provided when you registered your app. Authorization code will be sent to that URL (if it matches with the value you entered in the registration form) if a user approves the app install. Or, if a customer declines, the corresponding error will also be sent to this URL."
								},
								{
									"key": "state",
									"value": "<string>",
									"description": "You may pass any random string as the state parameter and the same string will be returned to your app after a user authorizes access. It may be used to store the user's session ID from your app or distinguish different responses. Using state may increase security; see RFC-6749.\n"
								}
							]
						},
						"description": "Authorize a user by redirecting them to the Pipedrive OAuth authorization page and request their permissions to act on their behalf. This step is necessary to implement only when you allow app installation outside of the Marketplace."
					},
					"response": [
						{
							"name": "Authorize user in the app.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/html"
									}
								],
								"url": {
									"raw": "https://oauth.pipedrive.com/oauth/authorize?client_id=<string>&redirect_uri=<string>&state=<string>",
									"protocol": "https",
									"host": [
										"oauth",
										"pipedrive",
										"com"
									],
									"path": [
										"oauth",
										"authorize"
									],
									"query": [
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "redirect_uri",
											"value": "<string>"
										},
										{
											"key": "state",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "As a result of the request, the customer will see a page with the confirmation dialog, which will present the details of your app (title, company name, icon) and explain the permission scopes that you have set for the app. Customers should confirm their wish to install the app by clicking \"Allow and install\" or deny authorization by clicking \"Cancel\".\n"
						}
					]
				},
				{
					"name": "Getting the tokens",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "<string>",
								"description": "(Required) Base 64 encoded string containing the `client_id` and `client_secret` values. The header value should be `Basic <base64(client_id:client_secret)>`."
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"description": "Since you are trying to exchange an authorization code for a pair of tokens, you must use the value \"authorization_code\""
								},
								{
									"key": "code",
									"value": "<string>",
									"description": "The authorization code that you received after the user confirmed app installation"
								},
								{
									"key": "redirect_uri",
									"value": "<string>",
									"description": "The callback URL you provided when you registered your app"
								}
							]
						},
						"url": {
							"raw": "https://oauth.pipedrive.com/oauth/token",
							"protocol": "https",
							"host": [
								"oauth",
								"pipedrive",
								"com"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": "After the customer has confirmed the app installation, you will need to exchange the `authorization_code` to a pair of access and refresh tokens. Using an access token, you can access the user's data through the API."
					},
					"response": [
						{
							"name": "Returns user Oauth2 tokens.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									},
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "(Required) Base 64 encoded string containing the `client_id` and `client_secret` values. The header value should be `Basic <base64(client_id:client_secret)>`."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"description": "Since you are trying to exchange an authorization code for a pair of tokens, you must use the value \"authorization_code\""
										},
										{
											"key": "code",
											"value": "<string>",
											"description": "The authorization code that you received after the user confirmed app installation"
										},
										{
											"key": "redirect_uri",
											"value": "<string>",
											"description": "The callback URL you provided when you registered your app"
										}
									]
								},
								"url": {
									"raw": "https://oauth.pipedrive.com/oauth/token",
									"protocol": "https",
									"host": [
										"oauth",
										"pipedrive",
										"com"
									],
									"path": [
										"oauth",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_token\": \"v1u:AQIBAHj+LzTNK1yuuuaLqifzhWb9crUNKTpk4FlQ9rjnXqp/6AErhI98syaV25RmpLJLIgOkAAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMbGNxa4UccVoXAmLNAgEQgDsiQ7cNdoRBJeFr1i3KW84RYyM1Qtwq1oSBJOl/NFQdVjDI2iQH0LBhS28DbL2KDvoVIihea9Ryt/9rIQ==:RIDnTOIXo8QirT3DMYw0Y0s8xBbxz59f5IMq7T7WhSz313e2MXRHB6g+8OTNCSqVO7QsUhluoAmOfBP1FNkPycy9txn7t2Uoz9y/JDVf4Givv4MMiK/Xq3I7hO4N6FeD+2GqDJDBn24OW6b0SRIr4FEROhGo3BpcPRGehv46NLn1n5LrqXrQwO9qrGD4gIZe40oO2IQgGL9QAPDfqvZ+JhUtcpAipRLp7cCDRfYU8+sdOFJ+hLffqC8isFcV6iPsNrmj\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 3599,\n  \"refresh_token\": \"1:1:2a5496a8bdd0f829dcb09dc8ba82b188f0ea4481\",\n  \"scope\": \"base\",\n  \"api_domain\": \"https://user-company.pipedrive.com\"\n}"
						}
					]
				},
				{
					"name": "Refreshing the tokens",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "<string>",
								"description": "(Required) Base 64 encoded string containing the `client_id` and `client_secret` values. The header value should be `Basic <base64(client_id:client_secret)>`."
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"description": "Since you are to refresh your access_token, you must use the value \"refresh_token\""
								},
								{
									"key": "refresh_token",
									"value": "<string>",
									"description": "The refresh token that you received after you exchanged the authorization code"
								}
							]
						},
						"url": {
							"raw": "https://oauth.pipedrive.com/oauth/token/",
							"protocol": "https",
							"host": [
								"oauth",
								"pipedrive",
								"com"
							],
							"path": [
								"oauth",
								"token",
								""
							]
						},
						"description": "The `access_token` has a lifetime. After a period of time, which was returned to you in `expires_in` JSON property, the `access_token` will be invalid, and you can no longer use it to get data from our API. To refresh the `access_token`, you must use the `refresh_token`."
					},
					"response": [
						{
							"name": "Returns user Oauth2 tokens.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									},
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "(Required) Base 64 encoded string containing the `client_id` and `client_secret` values. The header value should be `Basic <base64(client_id:client_secret)>`."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "refresh_token",
											"description": "Since you are to refresh your access_token, you must use the value \"refresh_token\""
										},
										{
											"key": "refresh_token",
											"value": "<string>",
											"description": "The refresh token that you received after you exchanged the authorization code"
										}
									]
								},
								"url": {
									"raw": "https://oauth.pipedrive.com/oauth/token/",
									"protocol": "https",
									"host": [
										"oauth",
										"pipedrive",
										"com"
									],
									"path": [
										"oauth",
										"token",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_token\": \"v1u:AQIBAHj+LzTNK1yuuuaLqifzhWb9crUNKTpk4FlQ9rjnXqp/6AErhI98syaV25RmpLJLIgOkAAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMbGNxa4UccVoXAmLNAgEQgDsiQ7cNdoRBJeFr1i3KW84RYyM1Qtwq1oSBJOl/NFQdVjDI2iQH0LBhS28DbL2KDvoVIihea9Ryt/9rIQ==:RIDnTOIXo8QirT3DMYw0Y0s8xBbxz59f5IMq7T7WhSz313e2MXRHB6g+8OTNCSqVO7QsUhluoAmOfBP1FNkPycy9txn7t2Uoz9y/JDVf4Givv4MMiK/Xq3I7hO4N6FeD+2GqDJDBn24OW6b0SRIr4FEROhGo3BpcPRGehv46NLn1n5LrqXrQwO9qrGD4gIZe40oO2IQgGL9QAPDfqvZ+JhUtcpAipRLp7cCDRfYU8+sdOFJ+hLffqC8isFcV6iPsNrmj\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 3599,\n  \"refresh_token\": \"1:1:2a5496a8bdd0f829dcb09dc8ba82b188f0ea4481\",\n  \"scope\": \"base\",\n  \"api_domain\": \"https://user-company.pipedrive.com\"\n}"
						}
					]
				}
			],
			"description": "Using OAuth 2.0 is necessary for developing apps that are available in the Pipedrive Marketplace. Authorization via OAuth 2.0 is a well-known and stable way to get fine-grained access to an API. To retrieve OAuth2 tokens you should send requests to the `https://oauth.pipedrive.com` domain. After registering the app, you must add the necessary server-side logic to your app to establish the OAuth flow. Please read more about authorization step on the [Pipedrive Developers page](https://pipedrive.readme.io/docs/marketplace-oauth-authorization).\n"
		},
		{
			"name": "OrganizationFields",
			"item": [
				{
					"name": "Get all organization fields",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationFields?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all organization fields."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationFields?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"key\": \"title\",\n      \"name\": \"Title\",\n      \"order_nr\": 2,\n      \"field_type\": \"varchar\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": true,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": null,\n      \"mandatory_flag\": true\n    },\n    {\n      \"id\": 2,\n      \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n      \"name\": \"Customer Type\",\n      \"order_nr\": 1,\n      \"field_type\": \"enum\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": true,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": false,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": [\n        {\n          \"id\": 190,\n          \"label\": \"Private person\"\n        },\n        {\n          \"id\": 191,\n          \"label\": \"Company\"\n        },\n        {\n          \"id\": 192,\n          \"label\": \"Government\"\n        }\n      ],\n      \"mandatory_flag\": true\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a new organization field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"field_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizationFields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields"
							]
						},
						"description": "Adds a new organization field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"field_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizationFields?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Delete multiple organization fields in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationFields?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated field IDs to delete"
								}
							]
						},
						"description": "Marks multiple fields as deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationFields?ids=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      123,\n      456\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get one organization field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Returns data about a specific organization field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationFields/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Delete an organization field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationFields/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "Update an organization field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizationFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Updates an organization field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizationFields/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				}
			],
			"description": "Organization fields represent the near-complete schema for an organization in the context of the company of the authorized user. Each company can have a different schema for their organizations, with various custom fields. In the context of using organization fields as a schema for defining the data fields of an organization, it must be kept in mind that some types of custom fields can have additional data fields which are not separate organization fields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of organization fields. For example, if there is a monetary field with the key `ffk9s9` stored on the account, `ffk9s9` would hold the numeric value of the field, and `ffk9s9_currency` would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one organization and list its keys.\n"
		},
		{
			"name": "OrganizationRelationships",
			"item": [
				{
					"name": "Get all relationships for organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationRelationships?org_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationRelationships"
							],
							"query": [
								{
									"key": "org_id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization to get relationships for"
								}
							]
						},
						"description": "Gets all of the relationships for a supplied organization ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationRelationships?org_id=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationRelationships"
									],
									"query": [
										{
											"key": "org_id",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"related_organization_name\": \"Telia\",\n      \"calculated_type\": \"daughter\",\n      \"calculated_related_org_id\": 1480,\n      \"id\": 1,\n      \"type\": \"parent\",\n      \"rel_owner_org_id\": {\n        \"name\": \"Pipedrive Inc.\",\n        \"people_count\": 1,\n        \"owner_id\": 925000,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"company@pipedrivemail.com\",\n        \"value\": 1481\n      },\n      \"rel_linked_org_id\": {\n        \"name\": \"Telia\",\n        \"people_count\": 2,\n        \"owner_id\": 925000,\n        \"address\": \"USA\",\n        \"active_flag\": true,\n        \"cc_email\": \"company@pipedrivemail.com\",\n        \"value\": 1480\n      },\n      \"add_time\": \"2020-09-22 08:58:28\",\n      \"update_time\": \"2020-09-22 08:58:28\",\n      \"active_flag\": \"true\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1482\": {\n        \"id\": 457,\n        \"name\": \"Yandex\",\n        \"people_count\": 2,\n        \"owner_id\": 9271535,\n        \"address\": \"Mustamäe tee 4b, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Create an organization relationship",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"<string>\",\n  \"rel_owner_org_id\": \"<integer>\",\n  \"rel_linked_org_id\": \"<integer>\",\n  \"org_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizationRelationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationRelationships"
							]
						},
						"description": "Creates and returns an organization relationship."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"<string>\",\n  \"rel_owner_org_id\": \"<integer>\",\n  \"rel_linked_org_id\": \"<integer>\",\n  \"org_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizationRelationships?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationRelationships"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"type\": \"parent\",\n    \"rel_owner_org_id\": {\n      \"name\": \"Pipedrive Inc.\",\n      \"people_count\": 1,\n      \"owner_id\": 925000,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1481\n    },\n    \"rel_linked_org_id\": {\n      \"name\": \"Telia\",\n      \"people_count\": 2,\n      \"owner_id\": 925000,\n      \"address\": \"USA\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1480\n    },\n    \"add_time\": \"2020-09-22 08:58:28\",\n    \"update_time\": \"2020-09-22 08:58:28\",\n    \"active_flag\": \"true\"\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1482\": {\n        \"id\": 457,\n        \"name\": \"Yandex\",\n        \"people_count\": 2,\n        \"owner_id\": 9271535,\n        \"address\": \"Mustamäe tee 4b, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete an organization relationship",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationRelationships/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationRelationships",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization relationship"
								}
							]
						},
						"description": "Deletes an organization relationship and returns the deleted ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationRelationships/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationRelationships",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization relationship"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 10\n  }\n}"
						}
					]
				},
				{
					"name": "Get one organization relationship",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationRelationships/:id?org_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationRelationships",
								":id"
							],
							"query": [
								{
									"key": "org_id",
									"value": "<integer>",
									"description": "The ID of the base organization for the returned calculated values"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization relationship"
								}
							]
						},
						"description": "Finds and returns an organization relationship from its ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationRelationships/:id?org_id=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationRelationships",
										":id"
									],
									"query": [
										{
											"key": "org_id",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization relationship"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"type\": \"parent\",\n    \"rel_owner_org_id\": {\n      \"name\": \"Pipedrive Inc.\",\n      \"people_count\": 1,\n      \"owner_id\": 925000,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1481\n    },\n    \"rel_linked_org_id\": {\n      \"name\": \"Telia\",\n      \"people_count\": 2,\n      \"owner_id\": 925000,\n      \"address\": \"USA\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1480\n    },\n    \"add_time\": \"2020-09-22 08:58:28\",\n    \"update_time\": \"2020-09-22 08:58:28\",\n    \"active_flag\": \"true\",\n    \"calculated_type\": \"daughter\",\n    \"calculated_related_org_id\": 1480\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1482\": {\n        \"id\": 457,\n        \"name\": \"Yandex\",\n        \"people_count\": 2,\n        \"owner_id\": 9271535,\n        \"address\": \"Mustamäe tee 4b, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update an organization relationship",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"org_id\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"rel_owner_org_id\": \"<integer>\",\n  \"rel_linked_org_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizationRelationships/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationRelationships",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization relationship"
								}
							]
						},
						"description": "Updates and returns an organization relationship."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"org_id\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"rel_owner_org_id\": \"<integer>\",\n  \"rel_linked_org_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizationRelationships/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationRelationships",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization relationship"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"type\": \"parent\",\n    \"rel_owner_org_id\": {\n      \"name\": \"Pipedrive Inc.\",\n      \"people_count\": 1,\n      \"owner_id\": 925000,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1481\n    },\n    \"rel_linked_org_id\": {\n      \"name\": \"Telia\",\n      \"people_count\": 2,\n      \"owner_id\": 925000,\n      \"address\": \"USA\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1480\n    },\n    \"add_time\": \"2020-09-22 08:58:28\",\n    \"update_time\": \"2020-09-22 08:58:28\",\n    \"active_flag\": \"true\"\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1482\": {\n        \"id\": 457,\n        \"name\": \"Yandex\",\n        \"people_count\": 2,\n        \"owner_id\": 9271535,\n        \"address\": \"Mustamäe tee 4b, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Organization relationships represent how different organizations are related to each other. The relationship can be hierarchical (parent-child companies) or lateral as defined by the `type` field - either `parent` or `related`.\n"
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Delete multiple organizations in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated IDs that will be deleted"
								}
							]
						},
						"description": "Marks multiple organizations as deleted. After 30 days, the organizations will be permanently deleted. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Organizations#deleteOrganization\" target=\"_blank\" rel=\"noopener noreferrer\">DELETE /api/v2/organizations/{id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?ids=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      123,\n      100\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all organizations",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations?user_id=<integer>&filter_id=<integer>&first_char=<string>&start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, only organizations owned by the given user will be returned. However, `filter_id` takes precedence over `user_id` when both are supplied."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "first_char",
									"value": "<string>",
									"description": "If supplied, only organizations whose name starts with the specified letter will be returned (case-insensitive)"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								}
							]
						},
						"description": "Returns all organizations."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?user_id=<integer>&filter_id=<integer>&first_char=<string>&start=0&limit=<integer>&sort=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"company_id\": 77,\n      \"owner_id\": {\n        \"id\": 10,\n        \"name\": \"Will Smith\",\n        \"email\": \"will.smith@pipedrive.com\",\n        \"has_pic\": 0,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true,\n        \"value\": 10\n      },\n      \"name\": \"Bolt\",\n      \"open_deals_count\": 1,\n      \"related_open_deals_count\": 2,\n      \"closed_deals_count\": 3,\n      \"related_closed_deals_count\": 1,\n      \"email_messages_count\": 2,\n      \"people_count\": 1,\n      \"activities_count\": 2,\n      \"done_activities_count\": 1,\n      \"undone_activities_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 0,\n      \"followers_count\": 1,\n      \"won_deals_count\": 0,\n      \"related_won_deals_count\": 0,\n      \"lost_deals_count\": 0,\n      \"related_lost_deals_count\": 0,\n      \"active_flag\": true,\n      \"picture_id\": {\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg\"\n        },\n        \"value\": 101\n      },\n      \"country_code\": null,\n      \"first_char\": \"b\",\n      \"update_time\": \"2020-09-08 12:14:11\",\n      \"add_time\": \"2020-02-25 10:04:08\",\n      \"visible_to\": \"3\",\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": 34,\n      \"last_activity_date\": \"2019-11-28\",\n      \"label\": 7,\n      \"label_ids\": [\n        7,\n        8\n      ],\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"address_subpremise\": \"\",\n      \"address_street_number\": \"3a\",\n      \"address_route\": \"Mustamäe tee\",\n      \"address_sublocality\": \"Kristiine\",\n      \"address_locality\": \"Tallinn\",\n      \"address_admin_area_level_1\": \"Harju maakond\",\n      \"address_admin_area_level_2\": \"\",\n      \"address_country\": \"Estonia\",\n      \"address_postal_code\": \"10616\",\n      \"address_formatted_address\": \"Mustamäe tee 3a, 10616 Tallinn, Estonia\",\n      \"owner_name\": \"John Doe\",\n      \"cc_email\": \"org@pipedrivemail.com\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false,\n      \"next_start\": 100\n    }\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"add_time\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						},
						"description": "Adds a new organization. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the organizationFields and look for `key` values. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-an-organization\" target=\"_blank\" rel=\"noopener noreferrer\">adding an organization</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"add_time\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 77,\n    \"owner_id\": {\n      \"id\": 10,\n      \"name\": \"Will Smith\",\n      \"email\": \"will.smith@pipedrive.com\",\n      \"has_pic\": 0,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 10\n    },\n    \"name\": \"Bolt\",\n    \"open_deals_count\": 1,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 1,\n    \"email_messages_count\": 2,\n    \"people_count\": 1,\n    \"activities_count\": 2,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 0,\n    \"files_count\": 0,\n    \"notes_count\": 0,\n    \"followers_count\": 1,\n    \"won_deals_count\": 0,\n    \"related_won_deals_count\": 0,\n    \"lost_deals_count\": 0,\n    \"related_lost_deals_count\": 0,\n    \"active_flag\": true,\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg\"\n      },\n      \"value\": 101\n    },\n    \"country_code\": null,\n    \"first_char\": \"b\",\n    \"update_time\": \"2020-09-08 12:14:11\",\n    \"add_time\": \"2020-02-25 10:04:08\",\n    \"visible_to\": \"3\",\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"label\": 7,\n    \"label_ids\": [\n      7,\n      8\n    ],\n    \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n    \"address_subpremise\": \"\",\n    \"address_street_number\": \"3a\",\n    \"address_route\": \"Mustamäe tee\",\n    \"address_sublocality\": \"Kristiine\",\n    \"address_locality\": \"Tallinn\",\n    \"address_admin_area_level_1\": \"Harju maakond\",\n    \"address_admin_area_level_2\": \"\",\n    \"address_country\": \"Estonia\",\n    \"address_postal_code\": \"10616\",\n    \"address_formatted_address\": \"Mustamäe tee 3a, 10616 Tallinn, Estonia\",\n    \"owner_name\": \"John Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\"\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get all organizations collection",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/collection?cursor=<string>&limit=<integer>&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"collection"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
								},
								{
									"key": "since",
									"value": "<string>",
									"description": "The time boundary that points to the start of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "until",
									"value": "<string>",
									"description": "The time boundary that points to the end of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "owner_id",
									"value": "<integer>",
									"description": "If supplied, only organizations owned by the given user will be returned"
								},
								{
									"key": "first_char",
									"value": "<string>",
									"description": "If supplied, only organizations whose name starts with the specified letter will be returned (case-insensitive)"
								}
							]
						},
						"description": "Returns all organizations. Please note that only global admins (those with global permissions) can access this endpoint. Users with regular permissions will receive a 403 response. Read more about global permissions <a href=\"https://support.pipedrive.com/en/article/global-user-management\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Organizations#getOrganizations\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/organizations</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/collection?cursor=<string>&limit=100&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "owner_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"active_flag\": true,\n      \"owner_id\": 123,\n      \"name\": \"Pipedrive\",\n      \"update_time\": \"2023-02-08 05:30:20\",\n      \"delete_time\": null,\n      \"add_time\": \"2023-01-08 05:30:20\",\n      \"visible_to\": \"3\",\n      \"label\": 1,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"address_subpremise\": \"\",\n      \"address_street_number\": \"3a\",\n      \"address_route\": \"Mustamäe tee\",\n      \"address_sublocality\": \"Kristiine\",\n      \"address_locality\": \"Tallinn\",\n      \"address_admin_area_level_1\": \"Harju maakond\",\n      \"address_admin_area_level_2\": \"\",\n      \"address_country\": \"Estonia\",\n      \"address_postal_code\": \"10616\",\n      \"address_formatted_address\": \"Mustamäe tee 3a, 10616 Tallinn, Estonia\",\n      \"cc_email\": \"org@pipedrivemail.com\"\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/collection?cursor=<string>&limit=100&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "owner_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Search organizations",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/search?term=<string>&fields=<string>&exact_match=<boolean>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"search"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href=\"https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>."
								},
								{
									"key": "exact_match",
									"value": "<boolean>",
									"description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/search?term=<string>&fields=<string>&exact_match=<boolean>&start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										"search"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "exact_match",
											"value": "<boolean>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"items\": [\n      {\n        \"result_score\": 0.316,\n        \"item\": {\n          \"id\": 1,\n          \"type\": \"organization\",\n          \"name\": \"Organization name\",\n          \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n          \"visible_to\": 3,\n          \"owner\": {\n            \"id\": 1\n          },\n          \"custom_fields\": [],\n          \"notes\": []\n        }\n      }\n    ]\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Marks an organization as deleted. After 30 days, the organization will be permanently deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "Get details of an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Returns the details of an organization. Note that this also returns some additional fields which are not present when asking for all organizations. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of organizationFields."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 77,\n    \"owner_id\": {\n      \"id\": 10,\n      \"name\": \"Will Smith\",\n      \"email\": \"will.smith@pipedrive.com\",\n      \"has_pic\": 0,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 10\n    },\n    \"name\": \"Bolt\",\n    \"open_deals_count\": 1,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 1,\n    \"email_messages_count\": 2,\n    \"people_count\": 1,\n    \"activities_count\": 2,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 0,\n    \"files_count\": 0,\n    \"notes_count\": 0,\n    \"followers_count\": 1,\n    \"won_deals_count\": 0,\n    \"related_won_deals_count\": 0,\n    \"lost_deals_count\": 0,\n    \"related_lost_deals_count\": 0,\n    \"active_flag\": true,\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg\"\n      },\n      \"value\": 101\n    },\n    \"country_code\": null,\n    \"first_char\": \"b\",\n    \"update_time\": \"2020-09-08 12:14:11\",\n    \"add_time\": \"2020-02-25 10:04:08\",\n    \"visible_to\": \"3\",\n    \"next_activity_date\": null,\n    \"next_activity_time\": null,\n    \"next_activity_id\": null,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"label\": 7,\n    \"label_ids\": [\n      7,\n      8\n    ],\n    \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n    \"address_subpremise\": \"\",\n    \"address_street_number\": \"3a\",\n    \"address_route\": \"Mustamäe tee\",\n    \"address_sublocality\": \"Kristiine\",\n    \"address_locality\": \"Tallinn\",\n    \"address_admin_area_level_1\": \"Harju maakond\",\n    \"address_admin_area_level_2\": \"\",\n    \"address_country\": \"Estonia\",\n    \"address_postal_code\": \"10616\",\n    \"address_formatted_address\": \"Mustamäe tee 3a, 10616 Tallinn, Estonia\",\n    \"owner_name\": \"John Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\",\n    \"last_activity\": {\n      \"id\": 8,\n      \"company_id\": 22122,\n      \"user_id\": 1234,\n      \"done\": false,\n      \"type\": \"deadline\",\n      \"reference_type\": \"scheduler-service\",\n      \"reference_id\": 7,\n      \"conference_meeting_client\": \"871b8bc88d3a1202\",\n      \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n      \"conference_meeting_id\": \"17058746701\",\n      \"due_date\": \"2020-06-09\",\n      \"due_time\": \"10:00\",\n      \"duration\": \"01:00\",\n      \"busy_flag\": true,\n      \"add_time\": \"2020-06-08 12:37:56\",\n      \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n      \"last_notification_time\": \"2020-08-08 12:37:56\",\n      \"last_notification_user_id\": 7655,\n      \"notification_language_id\": 1,\n      \"subject\": \"Deadline\",\n      \"public_description\": \"This is a description\",\n      \"calendar_sync_include_context\": \"\",\n      \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n      \"org_id\": 5,\n      \"person_id\": 1101,\n      \"deal_id\": 300,\n      \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"project_id\": null,\n      \"active_flag\": true,\n      \"update_time\": \"2020-08-08 12:37:56\",\n      \"update_user_id\": 5596,\n      \"gcal_event_id\": \"\",\n      \"google_calendar_id\": \"\",\n      \"google_calendar_etag\": \"\",\n      \"source_timezone\": \"\",\n      \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n      \"rec_rule_extension\": \"\",\n      \"rec_master_activity_id\": 1,\n      \"series\": [],\n      \"note\": \"A note for the activity\",\n      \"created_by_user_id\": 1234,\n      \"location_subpremise\": \"\",\n      \"location_street_number\": \"3\",\n      \"location_route\": \"Mustamäe tee\",\n      \"location_sublocality\": \"Kristiine\",\n      \"location_locality\": \"Tallinn\",\n      \"location_admin_area_level_1\": \"Harju maakond\",\n      \"location_admin_area_level_2\": \"\",\n      \"location_country\": \"Estonia\",\n      \"location_postal_code\": \"10616\",\n      \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n      \"attendees\": [\n        {\n          \"email_address\": \"attendee@pipedrivemail.com\",\n          \"is_organizer\": 0,\n          \"name\": \"Attendee\",\n          \"person_id\": 25312,\n          \"status\": \"noreply\",\n          \"user_id\": null\n        }\n      ],\n      \"participants\": [\n        {\n          \"person_id\": 17985,\n          \"primary_flag\": false\n        },\n        {\n          \"person_id\": 1101,\n          \"primary_flag\": true\n        }\n      ],\n      \"org_name\": \"Organization\",\n      \"person_name\": \"Person\",\n      \"deal_title\": \"Deal\",\n      \"owner_name\": \"Creator\",\n      \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n      \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n      \"assigned_to_user_id\": 1235,\n      \"file\": {\n        \"id\": \"376892,\",\n        \"clean_name\": \"Audio 10:55:07.m4a\",\n        \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n      }\n    },\n    \"next_activity\": null\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false,\n      \"next_start\": 100\n    }\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Updates the properties of an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 77,\n    \"owner_id\": {\n      \"id\": 10,\n      \"name\": \"Will Smith\",\n      \"email\": \"will.smith@pipedrive.com\",\n      \"has_pic\": 0,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 10\n    },\n    \"name\": \"Bolt\",\n    \"open_deals_count\": 1,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 1,\n    \"email_messages_count\": 2,\n    \"people_count\": 1,\n    \"activities_count\": 2,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 0,\n    \"files_count\": 0,\n    \"notes_count\": 0,\n    \"followers_count\": 1,\n    \"won_deals_count\": 0,\n    \"related_won_deals_count\": 0,\n    \"lost_deals_count\": 0,\n    \"related_lost_deals_count\": 0,\n    \"active_flag\": true,\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg\"\n      },\n      \"value\": 101\n    },\n    \"country_code\": null,\n    \"first_char\": \"b\",\n    \"update_time\": \"2020-09-08 12:14:11\",\n    \"add_time\": \"2020-02-25 10:04:08\",\n    \"visible_to\": \"3\",\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"label\": 7,\n    \"label_ids\": [\n      7,\n      8\n    ],\n    \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n    \"address_subpremise\": \"\",\n    \"address_street_number\": \"3a\",\n    \"address_route\": \"Mustamäe tee\",\n    \"address_sublocality\": \"Kristiine\",\n    \"address_locality\": \"Tallinn\",\n    \"address_admin_area_level_1\": \"Harju maakond\",\n    \"address_admin_area_level_2\": \"\",\n    \"address_country\": \"Estonia\",\n    \"address_postal_code\": \"10616\",\n    \"address_formatted_address\": \"Mustamäe tee 3a, 10616 Tallinn, Estonia\",\n    \"owner_name\": \"John Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\"\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List activities associated with an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/activities?start=0&limit=<integer>&done=<number>&exclude=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"activities"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "done",
									"value": "<number>",
									"description": "Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted returns both Done and Not done activities."
								},
								{
									"key": "exclude",
									"value": "<string>",
									"description": "A comma-separated string of activity IDs to exclude from result"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists activities associated with an organization. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Activities#getActivities\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/activities?org_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/activities?start=0&limit=<integer>&done=<number>&exclude=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"activities"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "done",
											"value": "<number>"
										},
										{
											"key": "exclude",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 8,\n      \"company_id\": 22122,\n      \"user_id\": 1234,\n      \"done\": false,\n      \"type\": \"deadline\",\n      \"reference_type\": \"scheduler-service\",\n      \"reference_id\": 7,\n      \"conference_meeting_client\": \"871b8bc88d3a1202\",\n      \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n      \"conference_meeting_id\": \"17058746701\",\n      \"due_date\": \"2020-06-09\",\n      \"due_time\": \"10:00\",\n      \"duration\": \"01:00\",\n      \"busy_flag\": true,\n      \"add_time\": \"2020-06-08 12:37:56\",\n      \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n      \"last_notification_time\": \"2020-08-08 12:37:56\",\n      \"last_notification_user_id\": 7655,\n      \"notification_language_id\": 1,\n      \"subject\": \"Deadline\",\n      \"public_description\": \"This is a description\",\n      \"calendar_sync_include_context\": \"\",\n      \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n      \"org_id\": 5,\n      \"person_id\": 1101,\n      \"deal_id\": 300,\n      \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"project_id\": null,\n      \"active_flag\": true,\n      \"update_time\": \"2020-08-08 12:37:56\",\n      \"update_user_id\": 5596,\n      \"gcal_event_id\": \"\",\n      \"google_calendar_id\": \"\",\n      \"google_calendar_etag\": \"\",\n      \"source_timezone\": \"\",\n      \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n      \"rec_rule_extension\": \"\",\n      \"rec_master_activity_id\": 1,\n      \"series\": [],\n      \"note\": \"A note for the activity\",\n      \"created_by_user_id\": 1234,\n      \"location_subpremise\": \"\",\n      \"location_street_number\": \"3\",\n      \"location_route\": \"Mustamäe tee\",\n      \"location_sublocality\": \"Kristiine\",\n      \"location_locality\": \"Tallinn\",\n      \"location_admin_area_level_1\": \"Harju maakond\",\n      \"location_admin_area_level_2\": \"\",\n      \"location_country\": \"Estonia\",\n      \"location_postal_code\": \"10616\",\n      \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n      \"attendees\": [\n        {\n          \"email_address\": \"attendee@pipedrivemail.com\",\n          \"is_organizer\": 0,\n          \"name\": \"Attendee\",\n          \"person_id\": 25312,\n          \"status\": \"noreply\",\n          \"user_id\": null\n        }\n      ],\n      \"participants\": [\n        {\n          \"person_id\": 17985,\n          \"primary_flag\": false\n        },\n        {\n          \"person_id\": 1101,\n          \"primary_flag\": true\n        }\n      ],\n      \"org_name\": \"Organization\",\n      \"person_name\": \"Person\",\n      \"deal_title\": \"Deal\",\n      \"owner_name\": \"Creator\",\n      \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n      \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n      \"assigned_to_user_id\": 1235,\n      \"file\": {\n        \"id\": \"376892,\",\n        \"clean_name\": \"Audio 10:55:07.m4a\",\n        \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"allOf\": [\n      {\n        \"activity_distribution\": {\n          \"8877\": {\n            \"activities\": {\n              \"call\": 2,\n              \"meeting\": 1\n            },\n            \"name\": \"Will Smith\",\n            \"activity_count\": 3,\n            \"share\": 100\n          }\n        }\n      },\n      {\n        \"pagination\": {\n          \"start\": 0,\n          \"limit\": 100,\n          \"more_items_in_collection\": true\n        }\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List updates about organization field values",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/changelog?cursor=<string>&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"changelog"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists updates about field values of an organization."
					},
					"response": [
						{
							"name": "Get changelog of an organization",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/changelog?cursor=<string>&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"changelog"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"field_key\": \"name\",\n      \"old_value\": \"Org 10\",\n      \"new_value\": \"Org 11\",\n      \"actor_user_id\": 26,\n      \"time\": \"2024-02-12 09:14:35\",\n      \"change_source\": \"app\",\n      \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\",\n      \"is_bulk_update_flag\": false\n    },\n    {\n      \"field_key\": \"51c27e4a19c3bedd91162a9d446707c1f95174ea\",\n      \"old_value\": \"0\",\n      \"new_value\": \"20\",\n      \"actor_user_id\": 26,\n      \"time\": \"2024-02-12 09:10:12\",\n      \"change_source\": \"app\",\n      \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\",\n      \"is_bulk_update_flag\": false\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"aWQ6NTQ0\"\n  }\n}"
						}
					]
				},
				{
					"name": "List deals associated with an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/deals?start=0&limit=<integer>&status=all_not_deleted&sort=<string>&only_primary_association=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"deals"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "status",
									"value": "all_not_deleted",
									"description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								},
								{
									"key": "only_primary_association",
									"value": "<number>",
									"description": "If set, only deals that are directly associated to the organization are fetched. If not set (default), all deals are fetched that are either directly or indirectly related to the organization. Indirect relations include relations through custom, organization-type fields and through persons of the given organization."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists deals associated with an organization. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Deals#getDeals\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/deals?org_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/deals?start=0&limit=<integer>&status=all_not_deleted&sort=<string>&only_primary_association=<number>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"deals"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "all_not_deleted"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "only_primary_association",
											"value": "<number>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"person_id\": {\n        \"active_flag\": true,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"37244499911\",\n            \"primary\": true\n          }\n        ],\n        \"value\": 1101\n      },\n      \"org_id\": {\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 5\n      },\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 5000,\n      \"currency\": \"EUR\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-11-28 16:19:50\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"8877\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"active_flag\": true,\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"stage\": {\n      \"2\": {\n        \"id\": 2,\n        \"company_id\": 123,\n        \"order_nr\": 1,\n        \"name\": \"Stage Name\",\n        \"active_flag\": true,\n        \"deal_probability\": 100,\n        \"pipeline_id\": 1,\n        \"rotten_flag\": false,\n        \"rotten_days\": null,\n        \"add_time\": \"2015-12-08 13:54:06\",\n        \"update_time\": \"2015-12-08 13:54:06\",\n        \"pipeline_name\": \"Pipeline\",\n        \"pipeline_deal_probability\": true\n      }\n    },\n    \"pipeline\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Pipeline\",\n        \"url_title\": \"Pipeline\",\n        \"order_nr\": 0,\n        \"active\": true,\n        \"deal_probability\": true,\n        \"add_time\": \"2015-12-08 10:00:24\",\n        \"update_time\": \"2015-12-08 10:00:24\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List files attached to an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/files?start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"files"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page. Please note that a maximum value of 100 is allowed."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Supported fields: `id`, `update_time`"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists files associated with an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/files?start=0&limit=<integer>&sort=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"files"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"user_id\": 8877,\n      \"deal_id\": 1,\n      \"person_id\": 1,\n      \"org_id\": 1480,\n      \"product_id\": 1,\n      \"activity_id\": 1,\n      \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n      \"log_id\": null,\n      \"add_time\": \"2020-09-16 11:19:36\",\n      \"update_time\": \"2020-09-16 11:19:36\",\n      \"file_name\": \"95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg\",\n      \"file_type\": \"img\",\n      \"file_size\": 95116,\n      \"active_flag\": true,\n      \"inline_flag\": false,\n      \"remote_location\": \"s3\",\n      \"remote_id\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"cid\": \"\",\n      \"s3_bucket\": \"\",\n      \"mail_message_id\": \"\",\n      \"mail_template_id\": \"\",\n      \"deal_name\": \"nice deal\",\n      \"person_name\": \"\",\n      \"people_name\": \"\",\n      \"org_name\": \"Pipedrive Inc.\",\n      \"product_name\": \"\",\n      \"lead_name\": \"nice lead\",\n      \"url\": \"https://app.pipedrive.com/api/v1/files/304/download\",\n      \"name\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"description\": \"\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List updates about an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/flow?start=0&limit=<integer>&all_changes=<string>&items=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"flow"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "all_changes",
									"value": "<string>",
									"description": "Whether to show custom field updates or not. 1 = Include custom field changes. If omitted, returns changes without custom field updates."
								},
								{
									"key": "items",
									"value": "<string>",
									"description": "A comma-separated string for filtering out item specific updates. (Possible values - activity, plannedActivity, note, file, change, deal, follower, participant, mailMessage, mailMessageWithAttachment, invoice, activityFile, document)."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists updates about an organization."
					},
					"response": [
						{
							"name": "Get the organization updates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/flow?start=0&limit=<integer>&all_changes=<string>&items=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"flow"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "all_changes",
											"value": "<string>"
										},
										{
											"key": "items",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"object\": \"organizationChange\",\n      \"timestamp\": \"2020-09-15 11:55:14\",\n      \"data\": {\n        \"id\": 3694,\n        \"item_id\": 1480,\n        \"user_id\": 9271535,\n        \"field_key\": \"owner_id\",\n        \"old_value\": 9271535,\n        \"new_value\": 8877,\n        \"is_bulk_update_flag\": null,\n        \"log_time\": \"2020-09-15 11:55:14\",\n        \"change_source\": \"app\",\n        \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML like Gecko) Chrome/84.0.4147.135 Safari/537.36\",\n        \"additional_data\": {\n          \"new_value_formatted\": \"Will Smith\",\n          \"old_value_formatted\": \"Robert Smith\"\n        }\n      }\n    },\n    {\n      \"object\": \"activity\",\n      \"timestamp\": \"2020-08-07 08:15:00\",\n      \"data\": {\n        \"id\": 8,\n        \"company_id\": 22122,\n        \"user_id\": 1234,\n        \"done\": false,\n        \"type\": \"deadline\",\n        \"reference_type\": \"scheduler-service\",\n        \"reference_id\": 7,\n        \"conference_meeting_client\": \"871b8bc88d3a1202\",\n        \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n        \"conference_meeting_id\": \"17058746701\",\n        \"due_date\": \"2020-06-09\",\n        \"due_time\": \"10:00\",\n        \"duration\": \"01:00\",\n        \"busy_flag\": true,\n        \"add_time\": \"2020-06-08 12:37:56\",\n        \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n        \"last_notification_time\": \"2020-08-08 12:37:56\",\n        \"last_notification_user_id\": 7655,\n        \"notification_language_id\": 1,\n        \"subject\": \"Deadline\",\n        \"public_description\": \"This is a description\",\n        \"calendar_sync_include_context\": \"\",\n        \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n        \"org_id\": 5,\n        \"person_id\": 1101,\n        \"deal_id\": 300,\n        \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n        \"project_id\": null,\n        \"active_flag\": true,\n        \"update_time\": \"2020-08-08 12:37:56\",\n        \"update_user_id\": 5596,\n        \"gcal_event_id\": \"\",\n        \"google_calendar_id\": \"\",\n        \"google_calendar_etag\": \"\",\n        \"source_timezone\": \"\",\n        \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n        \"rec_rule_extension\": \"\",\n        \"rec_master_activity_id\": 1,\n        \"series\": [],\n        \"note\": \"A note for the activity\",\n        \"created_by_user_id\": 1234,\n        \"location_subpremise\": \"\",\n        \"location_street_number\": \"3\",\n        \"location_route\": \"Mustamäe tee\",\n        \"location_sublocality\": \"Kristiine\",\n        \"location_locality\": \"Tallinn\",\n        \"location_admin_area_level_1\": \"Harju maakond\",\n        \"location_admin_area_level_2\": \"\",\n        \"location_country\": \"Estonia\",\n        \"location_postal_code\": \"10616\",\n        \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n        \"attendees\": [\n          {\n            \"email_address\": \"attendee@pipedrivemail.com\",\n            \"is_organizer\": 0,\n            \"name\": \"Attendee\",\n            \"person_id\": 25312,\n            \"status\": \"noreply\",\n            \"user_id\": null\n          }\n        ],\n        \"participants\": [\n          {\n            \"person_id\": 17985,\n            \"primary_flag\": false\n          },\n          {\n            \"person_id\": 1101,\n            \"primary_flag\": true\n          }\n        ],\n        \"org_name\": \"Organization\",\n        \"person_name\": \"Person\",\n        \"deal_title\": \"Deal\",\n        \"owner_name\": \"Creator\",\n        \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n        \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n        \"assigned_to_user_id\": 1235,\n        \"file\": {\n          \"id\": \"376892,\",\n          \"clean_name\": \"Audio 10:55:07.m4a\",\n          \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n        }\n      }\n    },\n    {\n      \"object\": \"file\",\n      \"timestamp\": \"2020-08-10 11:52:26\",\n      \"data\": {\n        \"id\": 1,\n        \"user_id\": 8877,\n        \"deal_id\": 1,\n        \"person_id\": 1,\n        \"org_id\": 1480,\n        \"product_id\": 1,\n        \"activity_id\": 1,\n        \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n        \"log_id\": null,\n        \"add_time\": \"2020-09-16 11:19:36\",\n        \"update_time\": \"2020-09-16 11:19:36\",\n        \"file_name\": \"95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg\",\n        \"file_type\": \"img\",\n        \"file_size\": 95116,\n        \"active_flag\": true,\n        \"inline_flag\": false,\n        \"remote_location\": \"s3\",\n        \"remote_id\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n        \"cid\": \"\",\n        \"s3_bucket\": \"\",\n        \"mail_message_id\": \"\",\n        \"mail_template_id\": \"\",\n        \"deal_name\": \"nice deal\",\n        \"person_name\": \"\",\n        \"people_name\": \"\",\n        \"org_name\": \"Pipedrive Inc.\",\n        \"product_name\": \"\",\n        \"lead_name\": \"nice lead\",\n        \"url\": \"https://app.pipedrive.com/api/v1/files/304/download\",\n        \"name\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n        \"description\": \"\"\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"allOf\": [\n      {\n        \"user\": {\n          \"123\": {\n            \"id\": 123,\n            \"name\": \"Jane Doe\",\n            \"email\": \"jane@pipedrive.com\",\n            \"has_pic\": 1,\n            \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n            \"active_flag\": true\n          }\n        }\n      },\n      {\n        \"organization\": {\n          \"1\": {\n            \"id\": 1,\n            \"name\": \"Org Name\",\n            \"people_count\": 1,\n            \"owner_id\": 123,\n            \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n            \"active_flag\": true,\n            \"cc_email\": \"org@pipedrivemail.com\"\n          }\n        }\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List followers of an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists the followers of an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/followers?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"followers"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 100,\n      \"id\": 123,\n      \"org_id\": 77,\n      \"add_time\": \"2020-09-08 08:17:52\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false,\n      \"next_start\": 100\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a follower to an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Adds a follower to an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/followers?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"followers"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"user_id\": 100,\n    \"id\": 123,\n    \"org_id\": 77,\n    \"add_time\": \"2020-09-08 08:17:52\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a follower from an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/followers/:follower_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"followers",
								":follower_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								},
								{
									"key": "follower_id",
									"value": "<integer>",
									"description": "(Required) The ID of the relationship between the follower and the organization"
								}
							]
						},
						"description": "Deletes a follower from an organization. You can retrieve the `follower_id` from the <a href=\"https://developers.pipedrive.com/docs/api/v1/Organizations#getOrganizationFollowers\">List followers of an organization</a> endpoint."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/followers/:follower_id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"followers",
										":follower_id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										},
										{
											"key": "follower_id",
											"value": "<integer>",
											"description": "(Required) The ID of the relationship between the follower and the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "List mail messages associated with an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/mailMessages?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"mailMessages"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists mail messages associated with an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/mailMessages?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"mailMessages"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"object\": \"mailMessage\",\n      \"timestamp\": \"2020-09-16 13:38:17\",\n      \"data\": {\n        \"id\": 1,\n        \"from\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"to\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"cc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"bcc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"body_url\": \"https://example.org\",\n        \"nylas_id\": \"8cfw8n7l4iy24xxxxxxxxx\",\n        \"account_id\": \"ao5gpry0zykr1xxxxxxxxx\",\n        \"user_id\": 1,\n        \"mail_thread_id\": 1,\n        \"subject\": \"test subject\",\n        \"snippet\": \"test subject\",\n        \"mail_tracking_status\": \"opened\",\n        \"mail_link_tracking_enabled_flag\": 0,\n        \"read_flag\": 1,\n        \"draft\": \"\",\n        \"s3_bucket\": \"pipedrive-mail-live-fr\",\n        \"s3_bucket_path\": \"e9cf-6081745/77777/nylas/111/1111/body\",\n        \"draft_flag\": 0,\n        \"synced_flag\": 1,\n        \"deleted_flag\": 0,\n        \"external_deleted_flag\": false,\n        \"has_body_flag\": 1,\n        \"sent_flag\": 0,\n        \"sent_from_pipedrive_flag\": 0,\n        \"smart_bcc_flag\": 0,\n        \"message_time\": \"2019-11-14T06:02:06.000Z\",\n        \"add_time\": \"2019-11-14T06:02:06.000Z\",\n        \"update_time\": \"2019-11-14T07:15:49.000Z\",\n        \"has_attachments_flag\": 1,\n        \"has_inline_attachments_flag\": 0,\n        \"has_real_attachments_flag\": 1,\n        \"mua_message_id\": \"8cfw8n7l4iy24lfhnexxxxxx-0@mailer.nylas.com\",\n        \"template_id\": 1,\n        \"item_type\": \"mailMessage\",\n        \"timestamp\": \"2020-09-16T13:37:50.000Z\",\n        \"company_id\": 6081745\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Merge two organizations",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merge_with_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"merge"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Merges an organization with another organization. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/merging-two-organizations\" target=\"_blank\" rel=\"noopener noreferrer\">merging two organizations</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"merge_with_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/merge?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"merge"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "List permitted users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/permittedUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"permittedUsers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "List users permitted to access an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/permittedUsers?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"permittedUsers"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    123,\n    777\n  ]\n}"
						}
					]
				},
				{
					"name": "List persons of an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/persons?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"persons"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists persons associated with an organization.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Persons#getPersons\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/persons?org_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/persons?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"persons"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"company_id\": 12,\n      \"owner_id\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true,\n        \"value\": 123\n      },\n      \"org_id\": {\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 1234\n      },\n      \"name\": \"Will Smith\",\n      \"first_name\": \"Will\",\n      \"last_name\": \"Smith\",\n      \"open_deals_count\": 2,\n      \"related_open_deals_count\": 2,\n      \"closed_deals_count\": 3,\n      \"related_closed_deals_count\": 3,\n      \"participant_open_deals_count\": 1,\n      \"participant_closed_deals_count\": 1,\n      \"email_messages_count\": 1,\n      \"activities_count\": 1,\n      \"done_activities_count\": 1,\n      \"undone_activities_count\": 2,\n      \"files_count\": 2,\n      \"notes_count\": 2,\n      \"followers_count\": 3,\n      \"won_deals_count\": 3,\n      \"related_won_deals_count\": 3,\n      \"lost_deals_count\": 1,\n      \"related_lost_deals_count\": 1,\n      \"active_flag\": true,\n      \"phone\": [\n        {\n          \"value\": \"12345\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"email\": [\n        {\n          \"value\": \"12345@email.com\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"primary_email\": \"12345@email.com\",\n      \"first_char\": \"w\",\n      \"update_time\": \"2020-05-08 05:30:20\",\n      \"add_time\": \"2017-10-18 13:23:07\",\n      \"visible_to\": \"3\",\n      \"marketing_status\": \"no_consent\",\n      \"picture_id\": {\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        },\n        \"value\": 4\n      },\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": 34,\n      \"last_activity_date\": \"2019-11-28\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": 1,\n      \"label_ids\": [\n        1,\n        2,\n        3\n      ],\n      \"org_name\": \"Organization name\",\n      \"owner_name\": \"Jane Doe\",\n      \"cc_email\": \"org@pipedrivemail.com\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"allOf\": [\n      {\n        \"organization\": {\n          \"1\": {\n            \"id\": 1,\n            \"name\": \"Org Name\",\n            \"people_count\": 1,\n            \"owner_id\": 123,\n            \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n            \"active_flag\": true,\n            \"cc_email\": \"org@pipedrivemail.com\"\n          }\n        }\n      },\n      {\n        \"user\": {\n          \"123\": {\n            \"id\": 123,\n            \"name\": \"Jane Doe\",\n            \"email\": \"jane@pipedrive.com\",\n            \"has_pic\": 1,\n            \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n            \"active_flag\": true\n          }\n        }\n      }\n    ]\n  }\n}"
						}
					]
				}
			],
			"description": "Organizations are companies and other kinds of organizations you are making deals with. Persons can be associated with organizations so that each organization can contain one or more persons.\n"
		},
		{
			"name": "PermissionSets",
			"item": [
				{
					"name": "Get all permission sets",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permissionSets?app=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissionSets"
							],
							"query": [
								{
									"key": "app",
									"value": "<string>",
									"description": "The app to filter the permission sets by"
								}
							]
						},
						"description": "Returns data about all permission sets."
					},
					"response": [
						{
							"name": "Get all permissions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissionSets?app=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissionSets"
									],
									"query": [
										{
											"key": "app",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"62cc4d7f-4038-4352-abf3-a8c1c822b631\",\n      \"name\": \"Deals admin\",\n      \"description\": \"See and edit all sales data (deals, leads), manage company-level sales setup (such as lost reasons and pipelines)\",\n      \"app\": \"sales\",\n      \"type\": \"admin\",\n      \"assignment_count\": 1\n    },\n    {\n      \"id\": \"f07d229d-088a-4144-a40f-1fe64295d180\",\n      \"name\": \"Deals regular user\",\n      \"description\": \"Access to sales data (deals, leads) and available actions may be limited depending on the custom permission setup. This set is the default for new users.\",\n      \"app\": \"sales\",\n      \"type\": \"regular\",\n      \"assignment_count\": 3\n    },\n    {\n      \"id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\",\n      \"name\": \"Global admin\",\n      \"description\": \"See and edit all cross-product data (such as contacts, activities, reports) and access related features\",\n      \"app\": \"global\",\n      \"type\": \"admin\",\n      \"assignment_count\": 1\n    },\n    {\n      \"id\": \"ec8a42e5-1842-490d-9113-b3a3b4b1c0a9\",\n      \"name\": \"Global regular user\",\n      \"description\": \"Access to cross-product data (such as contacts, activities, reports) and available actions may be limited depending on the custom permission setup. This set is the default for new users.\",\n      \"app\": \"global\",\n      \"type\": \"regular\",\n      \"assignment_count\": 2\n    },\n    {\n      \"id\": \"982c5ce5-b8ba-4b47-b102-9da024f4b990\",\n      \"name\": \"Account settings\",\n      \"description\": \"Access company account level features and setup (billing, security center, company settings, user management)\",\n      \"app\": \"account_settings\",\n      \"type\": \"admin\",\n      \"assignment_count\": 1\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get one permission set",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permissionSets/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissionSets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID of the permission set"
								}
							]
						},
						"description": "Returns data about a specific permission set."
					},
					"response": [
						{
							"name": "The permission set of a specific user ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissionSets/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissionSets",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the permission set"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"f07d229d-088a-4144-a40f-1fe64295d180\",\n      \"name\": \"Deals regular user\",\n      \"description\": \"Access to sales data (deals, leads) and available actions may be limited depending on the custom permission setup. This set is the default for new users.\",\n      \"app\": \"sales\",\n      \"assignment_count\": 3,\n      \"contents\": [\n        \"can_add_products\",\n        \"can_bulk_edit_items\",\n        \"can_change_visibility_of_items\",\n        \"can_delete_activities\",\n        \"can_edit_products\",\n        \"can_edit_shared_filters\",\n        \"can_export_data_from_lists\",\n        \"can_see_deals_list_summary\",\n        \"can_see_other_users\",\n        \"can_share_filters\",\n        \"can_use_api\",\n        \"can_use_email_tracking\"\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "If the user ID has no assignments, then it will return NotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissionSets/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissionSets",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the permission set"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "List permission set assignments",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permissionSets/:id/assignments?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissionSets",
								":id",
								"assignments"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID of the permission set"
								}
							]
						},
						"description": "Returns the list of assignments for a permission set."
					},
					"response": [
						{
							"name": "The assignments of a specific user ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissionSets/:id/assignments?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissionSets",
										":id",
										"assignments"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the permission set"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 10,\n      \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\",\n      \"name\": \"Deals regular user\"\n    }\n  ]\n}"
						},
						{
							"name": "If the user ID has no assignments, then it will return NotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissionSets/:id/assignments?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissionSets",
										":id",
										"assignments"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the permission set"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			],
			"description": "Permission sets define what users in the account can do: which actions they are allowed to perform and which features they can access. Permission sets are app-specific, where apps are large parts of functionality, e.g., sales app, which allows accessing sales data, global permissions, which oversee cross-product features (for example contacts, insights, products) or account settings, which provides access to billing, user management, company settings and security center. Some permission sets with types such as admin and regular are pre-created for the account, while other custom ones can be created by users (depending on the tier the account is on).\n"
		},
		{
			"name": "PersonFields",
			"item": [
				{
					"name": "Get all person fields",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/personFields?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all person fields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personFields?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"key\": \"title\",\n      \"name\": \"Title\",\n      \"order_nr\": 2,\n      \"field_type\": \"varchar\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": true,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": null,\n      \"mandatory_flag\": true\n    },\n    {\n      \"id\": 2,\n      \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n      \"name\": \"Customer Type\",\n      \"order_nr\": 1,\n      \"field_type\": \"enum\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": true,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": false,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": [\n        {\n          \"id\": 190,\n          \"label\": \"Private person\"\n        },\n        {\n          \"id\": 191,\n          \"label\": \"Company\"\n        },\n        {\n          \"id\": 192,\n          \"label\": \"Government\"\n        }\n      ],\n      \"mandatory_flag\": true\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a new person field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"field_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/personFields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields"
							]
						},
						"description": "Adds a new person field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"field_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/personFields?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Delete multiple person fields in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/personFields?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated field IDs to delete"
								}
							]
						},
						"description": "Marks multiple fields as deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personFields?ids=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      123,\n      456\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get one person field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/personFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Returns data about a specific person field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personFields/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a person field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/personFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personFields/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "Update a person field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/personFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Updates a person field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/personFields/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				}
			],
			"description": "Person fields represent the near-complete schema for a person in the context of the company of the authorized user. Each company can have a different schema for their persons, with various custom fields. In the context of using person fields as a schema for defining the data fields of a person, it must be kept in mind that some types of custom fields can have additional data fields which are not separate person fields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of person fields. For example, if there is a monetary field with the key `ffk9s9` stored on the account, `ffk9s9` would hold the numeric value of the field, and `ffk9s9_currency` would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one person and list its keys.\n"
		},
		{
			"name": "Persons",
			"item": [
				{
					"name": "Delete multiple persons in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated IDs that will be deleted"
								}
							]
						},
						"description": "Marks multiple persons as deleted. After 30 days, the persons will be permanently deleted. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Persons#deletePerson\" target=\"_blank\" rel=\"noopener noreferrer\">DELETE /api/v2/persons/{id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons?ids=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      123,\n      456\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all persons",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons?user_id=<integer>&filter_id=<integer>&first_char=<string>&start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, only persons owned by the given user will be returned. However, `filter_id` takes precedence over `user_id` when both are supplied."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "first_char",
									"value": "<string>",
									"description": "If supplied, only persons whose name starts with the specified letter will be returned (case-insensitive)"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								}
							]
						},
						"description": "Returns all persons."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons?user_id=<integer>&filter_id=<integer>&first_char=<string>&start=0&limit=<integer>&sort=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"company_id\": 12,\n      \"owner_id\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true,\n        \"value\": 123\n      },\n      \"org_id\": {\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 1234\n      },\n      \"name\": \"Will Smith\",\n      \"first_name\": \"Will\",\n      \"last_name\": \"Smith\",\n      \"open_deals_count\": 2,\n      \"related_open_deals_count\": 2,\n      \"closed_deals_count\": 3,\n      \"related_closed_deals_count\": 3,\n      \"participant_open_deals_count\": 1,\n      \"participant_closed_deals_count\": 1,\n      \"email_messages_count\": 1,\n      \"activities_count\": 1,\n      \"done_activities_count\": 1,\n      \"undone_activities_count\": 2,\n      \"files_count\": 2,\n      \"notes_count\": 2,\n      \"followers_count\": 3,\n      \"won_deals_count\": 3,\n      \"related_won_deals_count\": 3,\n      \"lost_deals_count\": 1,\n      \"related_lost_deals_count\": 1,\n      \"active_flag\": true,\n      \"phone\": [\n        {\n          \"value\": \"12345\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"email\": [\n        {\n          \"value\": \"12345@email.com\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"primary_email\": \"12345@email.com\",\n      \"first_char\": \"w\",\n      \"update_time\": \"2020-05-08 05:30:20\",\n      \"add_time\": \"2017-10-18 13:23:07\",\n      \"visible_to\": \"3\",\n      \"marketing_status\": \"no_consent\",\n      \"picture_id\": {\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        },\n        \"value\": 4\n      },\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": 34,\n      \"last_activity_date\": \"2019-11-28\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": 1,\n      \"label_ids\": [\n        1,\n        2,\n        3\n      ],\n      \"org_name\": \"Organization name\",\n      \"owner_name\": \"Jane Doe\",\n      \"cc_email\": \"org@pipedrivemail.com\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false,\n      \"next_start\": 100\n    }\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"email\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"phone\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\",\n  \"marketing_status\": \"<string>\",\n  \"add_time\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/persons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons"
							]
						},
						"description": "Adds a new person. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the personFields and look for `key` values.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `data.marketing_status` field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"email\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"phone\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\",\n  \"marketing_status\": \"<string>\",\n  \"add_time\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/persons?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 12,\n    \"owner_id\": {\n      \"id\": 123,\n      \"name\": \"Jane Doe\",\n      \"email\": \"jane@pipedrive.com\",\n      \"has_pic\": 1,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 123\n    },\n    \"org_id\": {\n      \"name\": \"Org Name\",\n      \"people_count\": 1,\n      \"owner_id\": 123,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"org@pipedrivemail.com\",\n      \"value\": 1234\n    },\n    \"name\": \"Will Smith\",\n    \"first_name\": \"Will\",\n    \"last_name\": \"Smith\",\n    \"open_deals_count\": 2,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 3,\n    \"participant_open_deals_count\": 1,\n    \"participant_closed_deals_count\": 1,\n    \"email_messages_count\": 1,\n    \"activities_count\": 1,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 2,\n    \"files_count\": 2,\n    \"notes_count\": 2,\n    \"followers_count\": 3,\n    \"won_deals_count\": 3,\n    \"related_won_deals_count\": 3,\n    \"lost_deals_count\": 1,\n    \"related_lost_deals_count\": 1,\n    \"active_flag\": true,\n    \"phone\": [\n      {\n        \"value\": \"12345\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"email\": [\n      {\n        \"value\": \"12345@email.com\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"primary_email\": \"12345@email.com\",\n    \"first_char\": \"w\",\n    \"update_time\": \"2020-05-08 05:30:20\",\n    \"add_time\": \"2017-10-18 13:23:07\",\n    \"visible_to\": \"3\",\n    \"marketing_status\": \"no_consent\",\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n      },\n      \"value\": 4\n    },\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": 1,\n    \"label_ids\": [\n      1,\n      2,\n      3\n    ],\n    \"org_name\": \"Organization name\",\n    \"owner_name\": \"Jane Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\"\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get all persons collection",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/collection?cursor=<string>&limit=<integer>&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								"collection"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
								},
								{
									"key": "since",
									"value": "<string>",
									"description": "The time boundary that points to the start of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "until",
									"value": "<string>",
									"description": "The time boundary that points to the end of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "owner_id",
									"value": "<integer>",
									"description": "If supplied, only persons owned by the given user will be returned"
								},
								{
									"key": "first_char",
									"value": "<string>",
									"description": "If supplied, only persons whose name starts with the specified letter will be returned (case-insensitive)"
								}
							]
						},
						"description": "Returns all persons. Please note that only global admins (those with global permissions) can access this endpoint. Users with regular permissions will receive a 403 response. Read more about global permissions <a href=\"https://support.pipedrive.com/en/article/global-user-management\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Persons#getPersons\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/persons</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/collection?cursor=<string>&limit=100&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "owner_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"active_flag\": true,\n      \"owner_id\": 123,\n      \"org_id\": 1234,\n      \"name\": \"Will Smith\",\n      \"phone\": [\n        {\n          \"value\": \"12345\",\n          \"primary\": true,\n          \"label\": \"work\"\n        },\n        {\n          \"value\": \"56789\",\n          \"primary\": false,\n          \"label\": \"home\"\n        }\n      ],\n      \"email\": [\n        {\n          \"value\": \"12345@email.com\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"update_time\": \"2023-02-08 05:30:20\",\n      \"delete_time\": null,\n      \"add_time\": \"2023-01-08 05:30:20\",\n      \"visible_to\": \"3\",\n      \"picture_id\": 12,\n      \"label\": 1,\n      \"cc_email\": \"org@pipedrivemail.com\"\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/collection?cursor=<string>&limit=100&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "owner_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Search persons",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/search?term=<string>&fields=<string>&exact_match=<boolean>&organization_id=<integer>&include_fields=<string>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								"search"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href=\"https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>."
								},
								{
									"key": "exact_match",
									"value": "<boolean>",
									"description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
								},
								{
									"key": "organization_id",
									"value": "<integer>",
									"description": "Will filter persons by the provided organization ID. The upper limit of found persons associated with the organization is 2000."
								},
								{
									"key": "include_fields",
									"value": "<string>",
									"description": "Supports including optional fields in the results which are not provided by default"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Searches all persons by name, email, phone, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found persons can be filtered by organization ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/search?term=<string>&fields=<string>&exact_match=<boolean>&organization_id=<integer>&include_fields=<string>&start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										"search"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "exact_match",
											"value": "<boolean>"
										},
										{
											"key": "organization_id",
											"value": "<integer>"
										},
										{
											"key": "include_fields",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"items\": [\n      {\n        \"result_score\": 0.5092,\n        \"item\": {\n          \"id\": 1,\n          \"type\": \"person\",\n          \"name\": \"Jane Doe\",\n          \"phones\": [\n            \"+372 555555555\"\n          ],\n          \"emails\": [\n            \"jane@pipedrive.com\"\n          ],\n          \"visible_to\": 3,\n          \"owner\": {\n            \"id\": 1\n          },\n          \"organization\": {\n            \"id\": 1,\n            \"name\": \"Organization name\",\n            \"address\": null\n          },\n          \"custom_fields\": [],\n          \"notes\": []\n        }\n      }\n    ]\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Marks a person as deleted. After 30 days, the person will be permanently deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12\n  }\n}"
						}
					]
				},
				{
					"name": "Get details of a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Returns the details of a person. Note that this also returns some additional fields which are not present when asking for all persons. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of personFields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 12,\n    \"owner_id\": {\n      \"id\": 123,\n      \"name\": \"Jane Doe\",\n      \"email\": \"jane@pipedrive.com\",\n      \"has_pic\": 1,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 123\n    },\n    \"org_id\": {\n      \"name\": \"Org Name\",\n      \"people_count\": 1,\n      \"owner_id\": 123,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"org@pipedrivemail.com\",\n      \"value\": 1234\n    },\n    \"name\": \"Will Smith\",\n    \"first_name\": \"Will\",\n    \"last_name\": \"Smith\",\n    \"open_deals_count\": 2,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 3,\n    \"participant_open_deals_count\": 1,\n    \"participant_closed_deals_count\": 1,\n    \"email_messages_count\": 1,\n    \"activities_count\": 1,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 2,\n    \"files_count\": 2,\n    \"notes_count\": 2,\n    \"followers_count\": 3,\n    \"won_deals_count\": 3,\n    \"related_won_deals_count\": 3,\n    \"lost_deals_count\": 1,\n    \"related_lost_deals_count\": 1,\n    \"active_flag\": true,\n    \"phone\": [\n      {\n        \"value\": \"12345\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"email\": [\n      {\n        \"value\": \"12345@email.com\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"primary_email\": \"12345@email.com\",\n    \"first_char\": \"w\",\n    \"update_time\": \"2020-05-08 05:30:20\",\n    \"add_time\": \"2017-10-18 13:23:07\",\n    \"visible_to\": \"3\",\n    \"marketing_status\": \"no_consent\",\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n      },\n      \"value\": 4\n    },\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": 1,\n    \"label_ids\": [\n      1,\n      2,\n      3\n    ],\n    \"org_name\": \"Organization name\",\n    \"owner_name\": \"Jane Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\"\n  },\n  \"additional_data\": {\n    \"dropbox_email\": \"test@email.com\"\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"email\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"phone\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\",\n  \"marketing_status\": \"<string>\",\n  \"add_time\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/persons/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Updates the properties of a person. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/updating-a-person\" target=\"_blank\" rel=\"noopener noreferrer\">updating a person</a>.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `data.marketing_status` field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"email\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"phone\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\",\n  \"marketing_status\": \"<string>\",\n  \"add_time\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/persons/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 12,\n    \"owner_id\": {\n      \"id\": 123,\n      \"name\": \"Jane Doe\",\n      \"email\": \"jane@pipedrive.com\",\n      \"has_pic\": 1,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 123\n    },\n    \"org_id\": {\n      \"name\": \"Org Name\",\n      \"people_count\": 1,\n      \"owner_id\": 123,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"org@pipedrivemail.com\",\n      \"value\": 1234\n    },\n    \"name\": \"Will Smith\",\n    \"first_name\": \"Will\",\n    \"last_name\": \"Smith\",\n    \"open_deals_count\": 2,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 3,\n    \"participant_open_deals_count\": 1,\n    \"participant_closed_deals_count\": 1,\n    \"email_messages_count\": 1,\n    \"activities_count\": 1,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 2,\n    \"files_count\": 2,\n    \"notes_count\": 2,\n    \"followers_count\": 3,\n    \"won_deals_count\": 3,\n    \"related_won_deals_count\": 3,\n    \"lost_deals_count\": 1,\n    \"related_lost_deals_count\": 1,\n    \"active_flag\": true,\n    \"phone\": [\n      {\n        \"value\": \"12345\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"email\": [\n      {\n        \"value\": \"12345@email.com\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"primary_email\": \"12345@email.com\",\n    \"first_char\": \"w\",\n    \"update_time\": \"2020-05-08 05:30:20\",\n    \"add_time\": \"2017-10-18 13:23:07\",\n    \"visible_to\": \"3\",\n    \"marketing_status\": \"no_consent\",\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n      },\n      \"value\": 4\n    },\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": 1,\n    \"label_ids\": [\n      1,\n      2,\n      3\n    ],\n    \"org_name\": \"Organization name\",\n    \"owner_name\": \"Jane Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\"\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List activities associated with a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/activities?start=0&limit=<integer>&done=<number>&exclude=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"activities"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "done",
									"value": "<number>",
									"description": "Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted, returns both Done and Not done activities."
								},
								{
									"key": "exclude",
									"value": "<string>",
									"description": "A comma-separated string of activity IDs to exclude from result"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists activities associated with a person. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Activities#getActivities\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/activities?person_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/activities?start=0&limit=<integer>&done=<number>&exclude=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"activities"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "done",
											"value": "<number>"
										},
										{
											"key": "exclude",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 8,\n      \"company_id\": 22122,\n      \"user_id\": 1234,\n      \"done\": false,\n      \"type\": \"deadline\",\n      \"reference_type\": \"scheduler-service\",\n      \"reference_id\": 7,\n      \"conference_meeting_client\": \"871b8bc88d3a1202\",\n      \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n      \"conference_meeting_id\": \"17058746701\",\n      \"due_date\": \"2020-06-09\",\n      \"due_time\": \"10:00\",\n      \"duration\": \"01:00\",\n      \"busy_flag\": true,\n      \"add_time\": \"2020-06-08 12:37:56\",\n      \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n      \"last_notification_time\": \"2020-08-08 12:37:56\",\n      \"last_notification_user_id\": 7655,\n      \"notification_language_id\": 1,\n      \"subject\": \"Deadline\",\n      \"public_description\": \"This is a description\",\n      \"calendar_sync_include_context\": \"\",\n      \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n      \"org_id\": 5,\n      \"person_id\": 1101,\n      \"deal_id\": 300,\n      \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"project_id\": null,\n      \"active_flag\": true,\n      \"update_time\": \"2020-08-08 12:37:56\",\n      \"update_user_id\": 5596,\n      \"gcal_event_id\": \"\",\n      \"google_calendar_id\": \"\",\n      \"google_calendar_etag\": \"\",\n      \"source_timezone\": \"\",\n      \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n      \"rec_rule_extension\": \"\",\n      \"rec_master_activity_id\": 1,\n      \"series\": [],\n      \"note\": \"A note for the activity\",\n      \"created_by_user_id\": 1234,\n      \"location_subpremise\": \"\",\n      \"location_street_number\": \"3\",\n      \"location_route\": \"Mustamäe tee\",\n      \"location_sublocality\": \"Kristiine\",\n      \"location_locality\": \"Tallinn\",\n      \"location_admin_area_level_1\": \"Harju maakond\",\n      \"location_admin_area_level_2\": \"\",\n      \"location_country\": \"Estonia\",\n      \"location_postal_code\": \"10616\",\n      \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n      \"attendees\": [\n        {\n          \"email_address\": \"attendee@pipedrivemail.com\",\n          \"is_organizer\": 0,\n          \"name\": \"Attendee\",\n          \"person_id\": 25312,\n          \"status\": \"noreply\",\n          \"user_id\": null\n        }\n      ],\n      \"participants\": [\n        {\n          \"person_id\": 17985,\n          \"primary_flag\": false\n        },\n        {\n          \"person_id\": 1101,\n          \"primary_flag\": true\n        }\n      ],\n      \"org_name\": \"Organization\",\n      \"person_name\": \"Person\",\n      \"deal_title\": \"Deal\",\n      \"owner_name\": \"Creator\",\n      \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n      \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n      \"assigned_to_user_id\": 1235,\n      \"file\": {\n        \"id\": \"376892,\",\n        \"clean_name\": \"Audio 10:55:07.m4a\",\n        \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"allOf\": [\n      {\n        \"activity_distribution\": {\n          \"8877\": {\n            \"activities\": {\n              \"call\": 2,\n              \"meeting\": 1\n            },\n            \"name\": \"Will Smith\",\n            \"activity_count\": 3,\n            \"share\": 100\n          }\n        }\n      },\n      {\n        \"pagination\": {\n          \"start\": 0,\n          \"limit\": 100,\n          \"more_items_in_collection\": true\n        }\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List updates about person field values",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/changelog?cursor=<string>&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"changelog"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists updates about field values of a person."
					},
					"response": [
						{
							"name": "Get changelog of a person",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/changelog?cursor=<string>&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"changelog"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"field_key\": \"51c27e4a19c3bedd91162a9d446707c1f95174ea\",\n      \"old_value\": null,\n      \"new_value\": \"200\",\n      \"actor_user_id\": 26,\n      \"time\": \"2024-02-12 09:14:35\",\n      \"change_source\": \"app\",\n      \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\",\n      \"is_bulk_update_flag\": false\n    },\n    {\n      \"field_key\": \"email\",\n      \"old_value\": \"john.doe@pipedrive.com\",\n      \"new_value\": \"jane.doe@pipedrive.com\",\n      \"actor_user_id\": 26,\n      \"time\": \"2024-02-12 09:10:12\",\n      \"change_source\": \"app\",\n      \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\",\n      \"is_bulk_update_flag\": false\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"aWQ6NTQ0\"\n  }\n}"
						}
					]
				},
				{
					"name": "List deals associated with a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/deals?start=0&limit=<integer>&status=all_not_deleted&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"deals"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "status",
									"value": "all_not_deleted",
									"description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists deals associated with a person. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Deals#getDeals\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/deals?person_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/deals?start=0&limit=<integer>&status=all_not_deleted&sort=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"deals"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "all_not_deleted"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"person_id\": {\n        \"active_flag\": true,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"37244499911\",\n            \"primary\": true\n          }\n        ],\n        \"value\": 1101\n      },\n      \"org_id\": {\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 5\n      },\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 5000,\n      \"currency\": \"EUR\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-11-28 16:19:50\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"8877\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"active_flag\": true,\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"stage\": {\n      \"2\": {\n        \"id\": 2,\n        \"company_id\": 123,\n        \"order_nr\": 1,\n        \"name\": \"Stage Name\",\n        \"active_flag\": true,\n        \"deal_probability\": 100,\n        \"pipeline_id\": 1,\n        \"rotten_flag\": false,\n        \"rotten_days\": null,\n        \"add_time\": \"2015-12-08 13:54:06\",\n        \"update_time\": \"2015-12-08 13:54:06\",\n        \"pipeline_name\": \"Pipeline\",\n        \"pipeline_deal_probability\": true\n      }\n    },\n    \"pipeline\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Pipeline\",\n        \"url_title\": \"Pipeline\",\n        \"order_nr\": 0,\n        \"active\": true,\n        \"deal_probability\": true,\n        \"add_time\": \"2015-12-08 10:00:24\",\n        \"update_time\": \"2015-12-08 10:00:24\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List files attached to a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/files?start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"files"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page. Please note that a maximum value of 100 is allowed."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Supported fields: `id`, `update_time`"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists files associated with a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/files?start=0&limit=<integer>&sort=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"files"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"user_id\": 8877,\n      \"deal_id\": 1,\n      \"person_id\": 1,\n      \"org_id\": 1480,\n      \"product_id\": 1,\n      \"activity_id\": 1,\n      \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n      \"log_id\": null,\n      \"add_time\": \"2020-09-16 11:19:36\",\n      \"update_time\": \"2020-09-16 11:19:36\",\n      \"file_name\": \"95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg\",\n      \"file_type\": \"img\",\n      \"file_size\": 95116,\n      \"active_flag\": true,\n      \"inline_flag\": false,\n      \"remote_location\": \"s3\",\n      \"remote_id\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"cid\": \"\",\n      \"s3_bucket\": \"\",\n      \"mail_message_id\": \"\",\n      \"mail_template_id\": \"\",\n      \"deal_name\": \"nice deal\",\n      \"person_name\": \"\",\n      \"people_name\": \"\",\n      \"org_name\": \"Pipedrive Inc.\",\n      \"product_name\": \"\",\n      \"lead_name\": \"nice lead\",\n      \"url\": \"https://app.pipedrive.com/api/v1/files/304/download\",\n      \"name\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"description\": \"\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List updates about a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/flow?start=0&limit=<integer>&all_changes=<string>&items=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"flow"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "all_changes",
									"value": "<string>",
									"description": "Whether to show custom field updates or not. 1 = Include custom field changes. If omitted returns changes without custom field updates."
								},
								{
									"key": "items",
									"value": "<string>",
									"description": "A comma-separated string for filtering out item specific updates. (Possible values - call, activity, plannedActivity, change, note, deal, file, dealChange, personChange, organizationChange, follower, dealFollower, personFollower, organizationFollower, participant, comment, mailMessage, mailMessageWithAttachment, invoice, document, marketing_campaign_stat, marketing_status_change)."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists updates about a person.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint's response will also include updates for the `marketing_status` field."
					},
					"response": [
						{
							"name": "Get the person updates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/flow?start=0&limit=<integer>&all_changes=<string>&items=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"flow"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "all_changes",
											"value": "<string>"
										},
										{
											"key": "items",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"object\": \"personChange\",\n      \"timestamp\": \"2020-08-03 11:25:21\",\n      \"data\": {\n        \"id\": 11158,\n        \"item_id\": 3512,\n        \"user_id\": 8877,\n        \"field_key\": \"org_id\",\n        \"old_value\": null,\n        \"new_value\": 1482,\n        \"is_bulk_update_flag\": null,\n        \"log_time\": \"2020-08-03 11:25:21\",\n        \"change_source\": \"app\",\n        \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML like Gecko) Chrome/84.0.4147.89 Safari/537.36\",\n        \"additional_data\": {\n          \"new_value_formatted\": \"Umbrella Corp.\"\n        }\n      }\n    },\n    {\n      \"object\": \"activity\",\n      \"timestamp\": \"2020-08-07 08:15:00\",\n      \"data\": {\n        \"id\": 8,\n        \"company_id\": 22122,\n        \"user_id\": 1234,\n        \"done\": false,\n        \"type\": \"deadline\",\n        \"reference_type\": \"scheduler-service\",\n        \"reference_id\": 7,\n        \"conference_meeting_client\": \"871b8bc88d3a1202\",\n        \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n        \"conference_meeting_id\": \"17058746701\",\n        \"due_date\": \"2020-06-09\",\n        \"due_time\": \"10:00\",\n        \"duration\": \"01:00\",\n        \"busy_flag\": true,\n        \"add_time\": \"2020-06-08 12:37:56\",\n        \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n        \"last_notification_time\": \"2020-08-08 12:37:56\",\n        \"last_notification_user_id\": 7655,\n        \"notification_language_id\": 1,\n        \"subject\": \"Deadline\",\n        \"public_description\": \"This is a description\",\n        \"calendar_sync_include_context\": \"\",\n        \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n        \"org_id\": 5,\n        \"person_id\": 1101,\n        \"deal_id\": 300,\n        \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n        \"project_id\": null,\n        \"active_flag\": true,\n        \"update_time\": \"2020-08-08 12:37:56\",\n        \"update_user_id\": 5596,\n        \"gcal_event_id\": \"\",\n        \"google_calendar_id\": \"\",\n        \"google_calendar_etag\": \"\",\n        \"source_timezone\": \"\",\n        \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n        \"rec_rule_extension\": \"\",\n        \"rec_master_activity_id\": 1,\n        \"series\": [],\n        \"note\": \"A note for the activity\",\n        \"created_by_user_id\": 1234,\n        \"location_subpremise\": \"\",\n        \"location_street_number\": \"3\",\n        \"location_route\": \"Mustamäe tee\",\n        \"location_sublocality\": \"Kristiine\",\n        \"location_locality\": \"Tallinn\",\n        \"location_admin_area_level_1\": \"Harju maakond\",\n        \"location_admin_area_level_2\": \"\",\n        \"location_country\": \"Estonia\",\n        \"location_postal_code\": \"10616\",\n        \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n        \"attendees\": [\n          {\n            \"email_address\": \"attendee@pipedrivemail.com\",\n            \"is_organizer\": 0,\n            \"name\": \"Attendee\",\n            \"person_id\": 25312,\n            \"status\": \"noreply\",\n            \"user_id\": null\n          }\n        ],\n        \"participants\": [\n          {\n            \"person_id\": 17985,\n            \"primary_flag\": false\n          },\n          {\n            \"person_id\": 1101,\n            \"primary_flag\": true\n          }\n        ],\n        \"org_name\": \"Organization\",\n        \"person_name\": \"Person\",\n        \"deal_title\": \"Deal\",\n        \"owner_name\": \"Creator\",\n        \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n        \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n        \"assigned_to_user_id\": 1235,\n        \"file\": {\n          \"id\": \"376892,\",\n          \"clean_name\": \"Audio 10:55:07.m4a\",\n          \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n        }\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"allOf\": [\n      {\n        \"user\": {\n          \"123\": {\n            \"id\": 123,\n            \"name\": \"Jane Doe\",\n            \"email\": \"jane@pipedrive.com\",\n            \"has_pic\": 1,\n            \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n            \"active_flag\": true\n          }\n        }\n      },\n      {\n        \"person\": {\n          \"1101\": {\n            \"active_flag\": true,\n            \"id\": 1101,\n            \"name\": \"Person\",\n            \"email\": [\n              {\n                \"label\": \"work\",\n                \"value\": \"person@pipedrive.com\",\n                \"primary\": true\n              }\n            ],\n            \"phone\": [\n              {\n                \"label\": \"work\",\n                \"value\": \"3421787767\",\n                \"primary\": true\n              }\n            ],\n            \"owner_id\": 8877\n          }\n        }\n      },\n      {\n        \"organization\": {\n          \"1\": {\n            \"id\": 1,\n            \"name\": \"Org Name\",\n            \"people_count\": 1,\n            \"owner_id\": 123,\n            \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n            \"active_flag\": true,\n            \"cc_email\": \"org@pipedrivemail.com\"\n          }\n        }\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List followers of a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists the followers of a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/followers?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"followers"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 123,\n      \"id\": 456,\n      \"deal_id\": 789,\n      \"add_time\": \"2020-09-09 11:36:23\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a follower to a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/persons/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Adds a follower to a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/persons/:id/followers?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"followers"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"user_id\": 1,\n    \"id\": 2,\n    \"person_id\": 3,\n    \"add_time\": \"2020-04-03 11:44:31\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a follower from a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/followers/:follower_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"followers",
								":follower_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								},
								{
									"key": "follower_id",
									"value": "<integer>",
									"description": "(Required) The ID of the relationship between the follower and the person"
								}
							]
						},
						"description": "Deletes a follower from a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/followers/:follower_id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"followers",
										":follower_id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										},
										{
											"key": "follower_id",
											"value": "<integer>",
											"description": "(Required) The ID of the relationship between the follower and the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12\n  }\n}"
						}
					]
				},
				{
					"name": "List mail messages associated with a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/mailMessages?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"mailMessages"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists mail messages associated with a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/mailMessages?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"mailMessages"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"object\": \"mailMessage\",\n      \"timestamp\": \"2020-09-16 13:38:17\",\n      \"data\": {\n        \"id\": 1,\n        \"from\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"to\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"cc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"bcc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"body_url\": \"https://example.org\",\n        \"nylas_id\": \"8cfw8n7l4iy24xxxxxxxxx\",\n        \"account_id\": \"ao5gpry0zykr1xxxxxxxxx\",\n        \"user_id\": 1,\n        \"mail_thread_id\": 1,\n        \"subject\": \"test subject\",\n        \"snippet\": \"test subject\",\n        \"mail_tracking_status\": \"opened\",\n        \"mail_link_tracking_enabled_flag\": 0,\n        \"read_flag\": 1,\n        \"draft\": \"\",\n        \"s3_bucket\": \"pipedrive-mail-live-fr\",\n        \"s3_bucket_path\": \"e9cf-6081745/77777/nylas/111/1111/body\",\n        \"draft_flag\": 0,\n        \"synced_flag\": 1,\n        \"deleted_flag\": 0,\n        \"external_deleted_flag\": false,\n        \"has_body_flag\": 1,\n        \"sent_flag\": 0,\n        \"sent_from_pipedrive_flag\": 0,\n        \"smart_bcc_flag\": 0,\n        \"message_time\": \"2019-11-14T06:02:06.000Z\",\n        \"add_time\": \"2019-11-14T06:02:06.000Z\",\n        \"update_time\": \"2019-11-14T07:15:49.000Z\",\n        \"has_attachments_flag\": 1,\n        \"has_inline_attachments_flag\": 0,\n        \"has_real_attachments_flag\": 1,\n        \"mua_message_id\": \"8cfw8n7l4iy24lfhnexxxxxx-0@mailer.nylas.com\",\n        \"template_id\": 1,\n        \"item_type\": \"mailMessage\",\n        \"timestamp\": \"2020-09-16T13:37:50.000Z\",\n        \"company_id\": 6081745\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Merge two persons",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merge_with_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/persons/:id/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"merge"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Merges a person with another person. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/merging-two-persons\" target=\"_blank\" rel=\"noopener noreferrer\">merging two persons</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"merge_with_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/persons/:id/merge?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"merge"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 12,\n    \"owner_id\": 123,\n    \"org_id\": 123,\n    \"name\": \"Will Smith\",\n    \"first_name\": \"Will\",\n    \"last_name\": \"Smith\",\n    \"open_deals_count\": 2,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 3,\n    \"participant_open_deals_count\": 1,\n    \"participant_closed_deals_count\": 1,\n    \"email_messages_count\": 1,\n    \"activities_count\": 1,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 2,\n    \"files_count\": 2,\n    \"notes_count\": 2,\n    \"followers_count\": 3,\n    \"won_deals_count\": 3,\n    \"related_won_deals_count\": 3,\n    \"lost_deals_count\": 1,\n    \"related_lost_deals_count\": 1,\n    \"active_flag\": true,\n    \"phone\": [\n      {\n        \"value\": \"12345\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"email\": [\n      {\n        \"value\": \"some@email.com\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"first_char\": \"w\",\n    \"update_time\": \"2020-05-08 05:30:20\",\n    \"add_time\": \"2017-10-18 13:23:07\",\n    \"visible_to\": \"3\",\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n      },\n      \"value\": 4\n    },\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": 1,\n    \"label_ids\": [\n      1,\n      2,\n      3\n    ],\n    \"org_name\": \"Organization name\",\n    \"owner_name\": \"Jane Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\",\n    \"merge_what_id\": 456\n  }\n}"
						}
					]
				},
				{
					"name": "List permitted users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/permittedUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"permittedUsers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "List users permitted to access a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/permittedUsers?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"permittedUsers"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    123,\n    777\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete person picture",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/picture",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"picture"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Deletes a person’s picture."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/picture?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"picture"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12\n  }\n}"
						}
					]
				},
				{
					"name": "Add person picture",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) One image supplied in the multipart/form-data encoding",
									"type": "file",
									"src": []
								},
								{
									"key": "crop_x",
									"value": "<integer>",
									"description": "X coordinate to where start cropping form (in pixels)",
									"type": "text"
								},
								{
									"key": "crop_y",
									"value": "<integer>",
									"description": "Y coordinate to where start cropping form (in pixels)",
									"type": "text"
								},
								{
									"key": "crop_width",
									"value": "<integer>",
									"description": "The width of the cropping area (in pixels)",
									"type": "text"
								},
								{
									"key": "crop_height",
									"value": "<integer>",
									"description": "The height of the cropping area (in pixels)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/persons/:id/picture",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"picture"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Adds a picture to a person. If a picture is already set, the old picture will be replaced. Added image (or the cropping parameters supplied with the request) should have an equal width and height and should be at least 128 pixels. GIF, JPG and PNG are accepted. All added images will be resized to 128 and 512 pixel wide squares."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) One image supplied in the multipart/form-data encoding",
											"type": "text"
										},
										{
											"key": "crop_x",
											"value": "<integer>",
											"description": "X coordinate to where start cropping form (in pixels)",
											"type": "text"
										},
										{
											"key": "crop_y",
											"value": "<integer>",
											"description": "Y coordinate to where start cropping form (in pixels)",
											"type": "text"
										},
										{
											"key": "crop_width",
											"value": "<integer>",
											"description": "The width of the cropping area (in pixels)",
											"type": "text"
										},
										{
											"key": "crop_height",
											"value": "<integer>",
											"description": "The height of the cropping area (in pixels)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/persons/:id/picture?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"picture"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"item_type\": \"person\",\n    \"item_id\": 25,\n    \"active_flag\": true,\n    \"add_time\": \"2020-09-08 08:17:52\",\n    \"update_time\": \"0000-00-00 00:00:00\",\n    \"added_by_user_id\": 967055,\n    \"pictures\": {\n      \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n      \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List products associated with a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/products?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"products"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists products associated with a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/products?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"products"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"123\": {\n        \"deal\": {\n          \"id\": 123,\n          \"company_id\": 1938610,\n          \"creator_user_id\": 599218,\n          \"user_id\": 599218,\n          \"person_id\": 25,\n          \"org_id\": 1,\n          \"stage_id\": 2,\n          \"title\": \"tervist\",\n          \"value\": 3342.79,\n          \"currency\": \"EUR\",\n          \"add_time\": \"2017-10-18 13:23:07\",\n          \"first_add_time\": \"2017-10-18 13:23:07\",\n          \"update_time\": \"2020-09-18 12:12:54\",\n          \"stage_change_time\": \"2020-05-07 11:44:00\",\n          \"active\": true,\n          \"deleted\": false,\n          \"status\": \"open\",\n          \"probability\": null,\n          \"next_activity_date\": \"2020-01-17\",\n          \"next_activity_time\": null,\n          \"next_activity_id\": 7,\n          \"last_activity_id\": null,\n          \"last_activity_date\": null,\n          \"lost_reason\": null,\n          \"visible_to\": \"3\",\n          \"close_time\": null,\n          \"pipeline_id\": 1,\n          \"won_time\": null,\n          \"first_won_time\": null,\n          \"lost_time\": null,\n          \"products_count\": 6,\n          \"files_count\": 1,\n          \"notes_count\": 0,\n          \"email_messages_count\": 0,\n          \"activities_count\": 1,\n          \"done_activities_count\": 0,\n          \"undone_activities_count\": 1,\n          \"participants_count\": 2,\n          \"expected_close_date\": null,\n          \"last_incoming_mail_time\": \"2020-09-18 12:12:54\",\n          \"last_outgoing_mail_time\": \"2020-09-18 12:12:54\",\n          \"label\": null\n        },\n        \"product\": {\n          \"id\": 4,\n          \"company_id\": 1938610,\n          \"name\": \"1234\",\n          \"code\": \"444\",\n          \"description\": \"123\",\n          \"unit\": \"\",\n          \"tax\": 0,\n          \"category\": \"40\",\n          \"active_flag\": true,\n          \"selectable\": true,\n          \"first_char\": \"1\",\n          \"visible_to\": \"3\",\n          \"owner_id\": 967055,\n          \"files_count\": null,\n          \"add_time\": \"2020-01-28 11:54:41\",\n          \"update_time\": \"2020-09-18 11:54:36\",\n          \"deal_id\": 5\n        }\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Persons are your contacts, the customers you are doing deals with. Each person can belong to an organization. Persons should not be confused with users.\n"
		},
		{
			"name": "Pipelines",
			"item": [
				{
					"name": "Get all pipelines",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines"
							]
						},
						"description": "Returns data about all pipelines."
					},
					"response": [
						{
							"name": "Get all pipelines",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Pipeline Name\",\n      \"url_title\": \"Pipeline-Name\",\n      \"order_nr\": 1,\n      \"active\": true,\n      \"deal_probability\": true,\n      \"add_time\": \"2017-08-03 12:51:18\",\n      \"update_time\": \"2020-03-23 13:15:25\",\n      \"selected\": true\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a new pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"deal_probability\": \"<number>\",\n  \"order_nr\": \"<integer>\",\n  \"active\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pipelines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines"
							]
						},
						"description": "Adds a new pipeline."
					},
					"response": [
						{
							"name": "Add pipeline",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"deal_probability\": \"<number>\",\n  \"order_nr\": \"<integer>\",\n  \"active\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pipelines?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Pipeline\",\n    \"url_title\": \"Pipeline\",\n    \"order_nr\": 1,\n    \"active\": true,\n    \"deal_probability\": true,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Marks a pipeline as deleted."
					},
					"response": [
						{
							"name": "Delete pipeline",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get one pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id?totals_convert_currency=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id"
							],
							"query": [
								{
									"key": "totals_convert_currency",
									"value": "<string>",
									"description": "The 3-letter currency code of any of the supported currencies. When supplied, `per_stages_converted` is returned in `deals_summary` which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to `default_currency` in which case users default currency is used."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Returns data about a specific pipeline. Also returns the summary of the deals in this pipeline across its stages."
					},
					"response": [
						{
							"name": "Get pipeline",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id?totals_convert_currency=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id"
									],
									"query": [
										{
											"key": "totals_convert_currency",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Pipeline\",\n    \"url_title\": \"Pipeline\",\n    \"order_nr\": 1,\n    \"active\": true,\n    \"deal_probability\": true,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\",\n    \"selected\": true,\n    \"deals_summary\": {\n      \"per_stages\": {\n        \"1\": {\n          \"EUR\": {\n            \"count\": 1,\n            \"value\": 10,\n            \"value_formatted\": \"10 €\",\n            \"weighted_value\": 10,\n            \"weighted_value_formatted\": \"10€\"\n          }\n        }\n      },\n      \"per_currency\": {\n        \"EUR\": 1\n      },\n      \"total_count\": 1,\n      \"per_currency_full\": {\n        \"EUR\": {\n          \"count\": 1,\n          \"value\": 10\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update a pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"deal_probability\": \"<number>\",\n  \"order_nr\": \"<integer>\",\n  \"active\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Updates the properties of a pipeline."
					},
					"response": [
						{
							"name": "Edit pipeline",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"deal_probability\": \"<number>\",\n  \"order_nr\": \"<integer>\",\n  \"active\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Pipeline\",\n    \"url_title\": \"Pipeline\",\n    \"order_nr\": 1,\n    \"active\": true,\n    \"deal_probability\": true,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\",\n    \"selected\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals conversion rates in pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id/conversion_statistics?start_date=<date>&end_date=<date>&user_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id",
								"conversion_statistics"
							],
							"query": [
								{
									"key": "start_date",
									"value": "<date>",
									"description": "(Required) The start of the period. Date in format of YYYY-MM-DD."
								},
								{
									"key": "end_date",
									"value": "<date>",
									"description": "(Required) The end of the period. Date in format of YYYY-MM-DD."
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "The ID of the user who's pipeline metrics statistics to fetch. If omitted, the authorized user will be used."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Returns all stage-to-stage conversion and pipeline-to-close rates for the given time period."
					},
					"response": [
						{
							"name": "Get pipeline deals conversion rates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id/conversion_statistics?start_date=<date>&end_date=<date>&user_id=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id",
										"conversion_statistics"
									],
									"query": [
										{
											"key": "start_date",
											"value": "<date>"
										},
										{
											"key": "end_date",
											"value": "<date>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"stage_conversions\": [\n      {\n        \"from_stage_id\": 1,\n        \"to_stage_id\": 2,\n        \"conversion_rate\": 0\n      }\n    ],\n    \"won_conversion\": 0,\n    \"lost_conversion\": 0\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals in a pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id/deals?filter_id=<integer>&user_id=<integer>&everyone=<number>&stage_id=<integer>&start=0&limit=<integer>&get_summary=<number>&totals_convert_currency=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id",
								"deals"
							],
							"query": [
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given filter will be returned"
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, `filter_id` will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned."
								},
								{
									"key": "everyone",
									"value": "<number>",
									"description": "If supplied, `filter_id` and `user_id` will not be considered – instead, deals owned by everyone will be returned"
								},
								{
									"key": "stage_id",
									"value": "<integer>",
									"description": "If supplied, only deals within the given stage will be returned"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "get_summary",
									"value": "<number>",
									"description": "Whether to include a summary of the pipeline in the `additional_data` or not"
								},
								{
									"key": "totals_convert_currency",
									"value": "<string>",
									"description": "The 3-letter currency code of any of the supported currencies. When supplied, `per_stages_converted` is returned inside `deals_summary` inside `additional_data` which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to `default_currency` in which case users default currency is used. Only works when `get_summary` parameter flag is enabled."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Lists deals in a specific pipeline across all its stages. If no parameters are provided open deals owned by the authorized user will be returned. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Deals#getDeals\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/deals?pipeline_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Get deals in a stage",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id/deals?filter_id=<integer>&user_id=<integer>&everyone=<number>&stage_id=<integer>&start=0&limit=<integer>&get_summary=<number>&totals_convert_currency=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id",
										"deals"
									],
									"query": [
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "everyone",
											"value": "<number>"
										},
										{
											"key": "stage_id",
											"value": "<integer>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "get_summary",
											"value": "<number>"
										},
										{
											"key": "totals_convert_currency",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": 123,\n      \"user_id\": 456,\n      \"person_id\": 1,\n      \"org_id\": 2,\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 5000,\n      \"currency\": \"EUR\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-05-29 04:21:51\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals movements in pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id/movement_statistics?start_date=<date>&end_date=<date>&user_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id",
								"movement_statistics"
							],
							"query": [
								{
									"key": "start_date",
									"value": "<date>",
									"description": "(Required) The start of the period. Date in format of YYYY-MM-DD."
								},
								{
									"key": "end_date",
									"value": "<date>",
									"description": "(Required) The end of the period. Date in format of YYYY-MM-DD."
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "The ID of the user who's pipeline statistics to fetch. If omitted, the authorized user will be used."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Returns statistics for deals movements for the given time period."
					},
					"response": [
						{
							"name": "Get pipeline deals conversion rates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id/movement_statistics?start_date=<date>&end_date=<date>&user_id=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id",
										"movement_statistics"
									],
									"query": [
										{
											"key": "start_date",
											"value": "<date>"
										},
										{
											"key": "end_date",
											"value": "<date>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"movements_between_stages\": {\n      \"count\": 1\n    },\n    \"new_deals\": {\n      \"count\": 1,\n      \"deals_ids\": [\n        1,\n        2\n      ],\n      \"values\": {\n        \"USD\": 10\n      },\n      \"formatted_values\": {\n        \"USD\": \"US$10\"\n      }\n    },\n    \"deals_left_open\": {\n      \"count\": 1,\n      \"deals_ids\": [\n        1,\n        2\n      ],\n      \"values\": {\n        \"USD\": 10\n      },\n      \"formatted_values\": {\n        \"USD\": \"US$10\"\n      }\n    },\n    \"won_deals\": {\n      \"count\": 1,\n      \"deals_ids\": [\n        1,\n        2\n      ],\n      \"values\": {\n        \"USD\": 10\n      },\n      \"formatted_values\": {\n        \"USD\": \"US$10\"\n      }\n    },\n    \"lost_deals\": {\n      \"count\": 1,\n      \"deals_ids\": [\n        1,\n        2\n      ],\n      \"values\": {\n        \"USD\": 10\n      },\n      \"formatted_values\": {\n        \"USD\": \"US$10\"\n      }\n    },\n    \"average_age_in_days\": {\n      \"across_all_stages\": 2,\n      \"by_stages\": [\n        {\n          \"stage_id\": 10,\n          \"value\": 15\n        }\n      ]\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Pipelines are essentially ordered collections of stages.\n"
		},
		{
			"name": "ProductFields",
			"item": [
				{
					"name": "Delete multiple product fields in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/productFields?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated field IDs to delete"
								}
							]
						},
						"description": "Marks multiple fields as deleted."
					},
					"response": [
						{
							"name": "Mark multiple product fields as deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields?ids=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      32,\n      35\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all product fields",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/productFields?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all product fields."
					},
					"response": [
						{
							"name": "Get data about all product fields",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 20,\n      \"key\": \"name\",\n      \"name\": \"Name\",\n      \"order_nr\": 1,\n      \"picklist_data\": null,\n      \"field_type\": \"varchar\",\n      \"add_time\": \"2019-11-25 13:34:03\",\n      \"update_time\": \"2019-11-25 13:34:02\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": false,\n      \"add_visible_flag\": true,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"mandatory_flag\": true\n    },\n    {\n      \"id\": 24,\n      \"key\": \"visible_to\",\n      \"name\": \"Visible to\",\n      \"order_nr\": 5,\n      \"field_type\": \"double\",\n      \"add_time\": \"2019-11-25 13:34:03\",\n      \"update_time\": \"2019-11-25 13:34:02\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": false,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": [\n        {\n          \"id\": 1,\n          \"label\": \"Owner & followers\"\n        },\n        {\n          \"id\": 3,\n          \"label\": \"Entire company\"\n        }\n      ],\n      \"mandatory_flag\": true\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a new product field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"field_type\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/productFields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields"
							]
						},
						"description": "Adds a new product field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>."
					},
					"response": [
						{
							"name": "Get the data for a single product field",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"field_type\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/productFields?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 32,\n    \"key\": \"397b0f545d134b479a5485041b33b0f0f3da2333\",\n    \"name\": \"Color\",\n    \"order_nr\": 13,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-12-20 11:01:24\",\n    \"update_time\": \"2019-12-20 11:01:24\",\n    \"last_updated_by_user_id\": 10999910,\n    \"created_by_user_id\": 10999910,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": true,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 9,\n        \"label\": \"red\"\n      },\n      {\n        \"id\": 10,\n        \"label\": \"blue\"\n      },\n      {\n        \"id\": 11,\n        \"label\": \"lilac\"\n      }\n    ],\n    \"mandatory_flag\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a product field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/productFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product field"
								}
							]
						},
						"description": "Marks a product field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>."
					},
					"response": [
						{
							"name": "Delete a product field",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 32\n  }\n}"
						},
						{
							"name": "The product field with the specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product field"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"The field is not found\"\n}"
						}
					]
				},
				{
					"name": "Get one product field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/productFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product field"
								}
							]
						},
						"description": "Returns data about a specific product field."
					},
					"response": [
						{
							"name": "Get the data for a single product field",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 32,\n    \"key\": \"397b0f545d134b479a5485041b33b0f0f3da2333\",\n    \"name\": \"Color\",\n    \"order_nr\": 13,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-12-20 11:01:24\",\n    \"update_time\": \"2019-12-20 11:01:24\",\n    \"last_updated_by_user_id\": 10999910,\n    \"created_by_user_id\": 10999910,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": true,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 9,\n        \"label\": \"red\"\n      },\n      {\n        \"id\": 10,\n        \"label\": \"blue\"\n      },\n      {\n        \"id\": 11,\n        \"label\": \"lilac\"\n      }\n    ],\n    \"mandatory_flag\": false\n  }\n}"
						},
						{
							"name": "The product field with the specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product field"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"The field is not found\"\n}"
						}
					]
				},
				{
					"name": "Update a product field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/productFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product field"
								}
							]
						},
						"description": "Updates a product field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values</a>."
					},
					"response": [
						{
							"name": "Get the data for a single product field",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/productFields/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 32,\n    \"key\": \"397b0f545d134b479a5485041b33b0f0f3da2333\",\n    \"name\": \"Color\",\n    \"order_nr\": 13,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-12-20 11:01:24\",\n    \"update_time\": \"2019-12-20 11:01:24\",\n    \"last_updated_by_user_id\": 10999910,\n    \"created_by_user_id\": 10999910,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": true,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 9,\n        \"label\": \"red\"\n      },\n      {\n        \"id\": 10,\n        \"label\": \"blue\"\n      },\n      {\n        \"id\": 11,\n        \"label\": \"lilac\"\n      }\n    ],\n    \"mandatory_flag\": false\n  }\n}"
						}
					]
				}
			],
			"description": "Product fields represent the near-complete schema for a product in the context of the company of the authorized user. Each company can have a different schema for their products, with various custom fields. In the context of using product fields as a schema for defining the data fields of a product, it must be kept in mind that some types of custom fields can have additional data fields which are not separate product fields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of product fields. For example, if there is a monetary field with the key `ffk9s9` stored on the account, `ffk9s9` would hold the numeric value of the field, and `ffk9s9_currency` would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one product and list its keys.\n"
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get all products",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products?user_id=<integer>&filter_id=<integer>&ids=<integer>&ids=<integer>&first_char=<string>&get_summary=<boolean>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, only products owned by the given user will be returned"
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "ids",
									"value": "<integer>",
									"description": "An array of integers with the IDs of the products that should be returned in the response"
								},
								{
									"key": "ids",
									"value": "<integer>",
									"description": "An array of integers with the IDs of the products that should be returned in the response"
								},
								{
									"key": "first_char",
									"value": "<string>",
									"description": "If supplied, only products whose name starts with the specified letter will be returned (case-insensitive)"
								},
								{
									"key": "get_summary",
									"value": "<boolean>",
									"description": "If supplied, the response will return the total numbers of products in the `additional_data.summary.total_count` property"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all products."
					},
					"response": [
						{
							"name": "List of products",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?user_id=<integer>&filter_id=<integer>&ids=<integer>&ids=<integer>&first_char=<string>&get_summary=<boolean>&start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "ids",
											"value": "<integer>"
										},
										{
											"key": "ids",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										},
										{
											"key": "get_summary",
											"value": "<boolean>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Mechanical Pencil\",\n      \"code\": \"MPENCIL\",\n      \"description\": null,\n      \"unit\": \"\",\n      \"tax\": 0,\n      \"category\": null,\n      \"active_flag\": true,\n      \"selectable\": true,\n      \"first_char\": \"m\",\n      \"visible_to\": \"3\",\n      \"owner_id\": {\n        \"id\": 10100010,\n        \"name\": \"Test User\",\n        \"email\": \"example@test.com\",\n        \"has_pic\": true,\n        \"pic_hash\": \"5df5332929fab76702207f38b29a5d88\",\n        \"active_flag\": true,\n        \"value\": 10100010\n      },\n      \"files_count\": null,\n      \"add_time\": \"2019-12-19 11:36:49\",\n      \"update_time\": \"2019-12-19 11:36:49\",\n      \"billing_frequency\": \"weekly\",\n      \"billing_frequency_cycles\": null,\n      \"prices\": [\n        {\n          \"id\": 1,\n          \"product_id\": 1,\n          \"price\": 5,\n          \"currency\": \"EUR\",\n          \"cost\": 2,\n          \"overhead_cost\": 3,\n          \"notes\": \"this is a note\"\n        }\n      ]\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 50,\n      \"next_start\": 25,\n      \"more_items_in_collection\": true\n    },\n    \"summary\": {\n      \"total_count\": \"35\"\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"10100010\": {\n        \"id\": 10100010,\n        \"name\": \"Test User\",\n        \"email\": \"example@test.com\",\n        \"has_pic\": true,\n        \"pic_hash\": \"5df5332929fab76702207f38b29a5d88\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"description\": \"<string>\",\n  \"unit\": \"<string>\",\n  \"tax\": 0,\n  \"active_flag\": true,\n  \"selectable\": true,\n  \"visible_to\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"prices\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"billing_frequency\": \"one-time\",\n  \"billing_frequency_cycles\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Adds a new product to the Products inventory. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-product\" target=\"_blank\" rel=\"noopener noreferrer\">adding a product</a>."
					},
					"response": [
						{
							"name": "Add product data",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"description\": \"<string>\",\n  \"unit\": \"<string>\",\n  \"tax\": 0,\n  \"active_flag\": true,\n  \"selectable\": true,\n  \"visible_to\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"prices\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"billing_frequency\": \"one-time\",\n  \"billing_frequency_cycles\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/products?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Regular Pencil\",\n    \"code\": \"MPENCIL\",\n    \"description\": null,\n    \"unit\": \"\",\n    \"tax\": 0,\n    \"category\": null,\n    \"active_flag\": true,\n    \"selectable\": true,\n    \"first_char\": \"r\",\n    \"visible_to\": \"3\",\n    \"owner_id\": {\n      \"id\": 10100010,\n      \"name\": \"Example User\",\n      \"email\": \"example@test.com\",\n      \"has_pic\": true,\n      \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n      \"active_flag\": true,\n      \"value\": 10100010\n    },\n    \"files_count\": null,\n    \"add_time\": \"2019-12-19 11:36:49\",\n    \"update_time\": \"2019-12-26 13:35:17\",\n    \"billing_frequency\": \"one-time\",\n    \"billing_frequency_cycles\": null,\n    \"prices\": [\n      {\n        \"id\": 1,\n        \"product_id\": 1,\n        \"price\": 5,\n        \"currency\": \"EUR\",\n        \"cost\": 2,\n        \"overhead_cost\": 3,\n        \"notes\": \"this is a note\"\n      }\n    ]\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"10100010\": {\n        \"id\": 10100010,\n        \"name\": \"Example User\",\n        \"email\": \"example@test.com\",\n        \"has_pic\": true,\n        \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Search products",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/search?term=<string>&fields=<string>&exact_match=<boolean>&include_fields=<string>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"search"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href=\"https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>."
								},
								{
									"key": "exact_match",
									"value": "<boolean>",
									"description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
								},
								{
									"key": "include_fields",
									"value": "<string>",
									"description": "Supports including optional fields in the results which are not provided by default"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Searches all products by name, code and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/search?term=<string>&fields=<string>&exact_match=<boolean>&include_fields=<string>&start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"search"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "exact_match",
											"value": "<boolean>"
										},
										{
											"key": "include_fields",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"items\": [\n      {\n        \"result_score\": 0.8766,\n        \"item\": {\n          \"id\": 1,\n          \"type\": \"product\",\n          \"name\": \"Some product\",\n          \"code\": 123,\n          \"visible_to\": 3,\n          \"owner\": {\n            \"id\": 1\n          },\n          \"custom_fields\": []\n        }\n      }\n    ]\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Marks a product as deleted. After 30 days, the product will be permanently deleted."
					},
					"response": [
						{
							"name": "Deletes a product",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get one product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Returns data about a specific product."
					},
					"response": [
						{
							"name": "Get product information by id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Regular Pencil\",\n    \"code\": \"MPENCIL\",\n    \"description\": null,\n    \"unit\": \"\",\n    \"tax\": 0,\n    \"category\": null,\n    \"active_flag\": true,\n    \"selectable\": true,\n    \"first_char\": \"r\",\n    \"visible_to\": \"3\",\n    \"owner_id\": {\n      \"id\": 10100010,\n      \"name\": \"Example User\",\n      \"email\": \"example@test.com\",\n      \"has_pic\": true,\n      \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n      \"active_flag\": true,\n      \"value\": 10100010\n    },\n    \"files_count\": null,\n    \"add_time\": \"2019-12-19 11:36:49\",\n    \"update_time\": \"2019-12-26 13:35:17\",\n    \"billing_frequency\": \"weekly\",\n    \"billing_frequency_cycles\": 52,\n    \"prices\": [\n      {\n        \"id\": 1,\n        \"product_id\": 1,\n        \"price\": 5,\n        \"currency\": \"EUR\",\n        \"cost\": 2,\n        \"overhead_cost\": 3,\n        \"notes\": \"this is a note\"\n      }\n    ]\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"10100010\": {\n        \"id\": 10100010,\n        \"name\": \"Example User\",\n        \"email\": \"example@test.com\",\n        \"has_pic\": true,\n        \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"description\": \"<string>\",\n  \"unit\": \"<string>\",\n  \"tax\": 0,\n  \"active_flag\": true,\n  \"selectable\": true,\n  \"visible_to\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"prices\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"billing_frequency\": \"<string>\",\n  \"billing_frequency_cycles\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Updates product data."
					},
					"response": [
						{
							"name": "Updates product data",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"description\": \"<string>\",\n  \"unit\": \"<string>\",\n  \"tax\": 0,\n  \"active_flag\": true,\n  \"selectable\": true,\n  \"visible_to\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"prices\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"billing_frequency\": \"<string>\",\n  \"billing_frequency_cycles\": \"<integer>\",\n  \"reprehenderit0d7\": -76994225,\n  \"Lorem_db\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/products/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Regular Pencil\",\n    \"code\": \"MPENCIL\",\n    \"description\": null,\n    \"unit\": \"\",\n    \"tax\": 0,\n    \"category\": null,\n    \"active_flag\": true,\n    \"selectable\": true,\n    \"first_char\": \"r\",\n    \"visible_to\": \"3\",\n    \"owner_id\": {\n      \"id\": 10100010,\n      \"name\": \"Example User\",\n      \"email\": \"example@test.com\",\n      \"has_pic\": true,\n      \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n      \"active_flag\": true,\n      \"value\": 10100010\n    },\n    \"files_count\": null,\n    \"add_time\": \"2019-12-19 11:36:49\",\n    \"update_time\": \"2019-12-26 13:35:17\",\n    \"billing_frequency\": \"semi-annually\",\n    \"billing_frequency_cycles\": 4,\n    \"prices\": [\n      {\n        \"id\": 1,\n        \"product_id\": 1,\n        \"price\": 5,\n        \"currency\": \"EUR\",\n        \"cost\": 2,\n        \"overhead_cost\": 3,\n        \"notes\": \"this is a note\"\n      }\n    ]\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"10100010\": {\n        \"id\": 10100010,\n        \"name\": \"Example User\",\n        \"email\": \"example@test.com\",\n        \"has_pic\": true,\n        \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals where a product is attached to",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id/deals?start=0&limit=<integer>&status=all_not_deleted",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"deals"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "status",
									"value": "all_not_deleted",
									"description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Returns data about deals that have a product attached to it."
					},
					"response": [
						{
							"name": "The data of deals that have a product attached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id/deals?start=0&limit=<integer>&status=all_not_deleted&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"deals"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "all_not_deleted"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"person_id\": {\n        \"active_flag\": true,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"37244499911\",\n            \"primary\": true\n          }\n        ],\n        \"value\": 1101\n      },\n      \"org_id\": {\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 5\n      },\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 5000,\n      \"currency\": \"EUR\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-11-28 16:19:50\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"8877\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"active_flag\": true,\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"stage\": {\n      \"2\": {\n        \"id\": 2,\n        \"company_id\": 123,\n        \"order_nr\": 1,\n        \"name\": \"Stage Name\",\n        \"active_flag\": true,\n        \"deal_probability\": 100,\n        \"pipeline_id\": 1,\n        \"rotten_flag\": false,\n        \"rotten_days\": null,\n        \"add_time\": \"2015-12-08 13:54:06\",\n        \"update_time\": \"2015-12-08 13:54:06\",\n        \"pipeline_name\": \"Pipeline\",\n        \"pipeline_deal_probability\": true\n      }\n    },\n    \"pipeline\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Pipeline\",\n        \"url_title\": \"Pipeline\",\n        \"order_nr\": 0,\n        \"active\": true,\n        \"deal_probability\": true,\n        \"add_time\": \"2015-12-08 10:00:24\",\n        \"update_time\": \"2015-12-08 10:00:24\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List files attached to a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id/files?start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"files"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page. Please note that a maximum value of 100 is allowed."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Supported fields: `id`, `update_time`"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Lists files associated with a product."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id/files?start=0&limit=<integer>&sort=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"files"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"product_id\": 1,\n      \"add_time\": \"2020-09-16 11:19:36\",\n      \"update_time\": \"2020-09-16 11:19:36\",\n      \"file_name\": \"95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg\",\n      \"file_type\": \"img\",\n      \"file_size\": 95116,\n      \"active_flag\": true,\n      \"inline_flag\": false,\n      \"remote_location\": \"s3\",\n      \"remote_id\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"s3_bucket\": \"files\",\n      \"product_name\": \"contract.pdf\",\n      \"url\": \"https://app.pipedrive.com/api/v1/files/304/download\",\n      \"name\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"description\": \"contract for client\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List followers of a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id/followers?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"followers"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Lists the followers of a product."
					},
					"response": [
						{
							"name": "Lists the followers of a product",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id/followers?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"followers"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 123,\n      \"id\": 456,\n      \"product_id\": 789,\n      \"add_time\": \"2021-08-03 12:07:05\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a follower to a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Adds a follower to a product."
					},
					"response": [
						{
							"name": "Adds a follower to a product",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/products/:id/followers?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"followers"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"user_id\": 10100010,\n    \"id\": 1,\n    \"product_id\": 2,\n    \"add_time\": \"2019-12-24 12:02:04\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a follower from a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id/followers/:follower_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"followers",
								":follower_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								},
								{
									"key": "follower_id",
									"value": "<integer>",
									"description": "(Required) The ID of the relationship between the follower and the product"
								}
							]
						},
						"description": "Deletes a follower from a product."
					},
					"response": [
						{
							"name": "Deletes a follower from a product",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id/followers/:follower_id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"followers",
										":follower_id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										},
										{
											"key": "follower_id",
											"value": "<integer>",
											"description": "(Required) The ID of the relationship between the follower and the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "List permitted users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id/permittedUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"permittedUsers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Lists users permitted to access a product."
					},
					"response": [
						{
							"name": "Lists users permitted to access a product",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id/permittedUsers?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"permittedUsers"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    10100010,\n    22302444,\n    33511023\n  ]\n}"
						}
					]
				}
			],
			"description": "Products are the goods or services you are dealing with. Each product can have N different price points - firstly, each product can have a price in N different currencies, and secondly, each product can have N variations of itself, each having N prices in different currencies. Note that only one price per variation per currency is supported. Products can be instantiated to deals. In the context of instatiation, a custom price, quantity, duration and discount can be applied.\n"
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Get all projects",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects?cursor=<string>&limit=<integer>&filter_id=<integer>&status=<string>&phase_id=<integer>&include_archived=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "If supplied, includes only projects with the specified statuses. Possible values are `open`, `completed`, `canceled` and `deleted`. By default `deleted` projects are not returned."
								},
								{
									"key": "phase_id",
									"value": "<integer>",
									"description": "If supplied, only projects in specified phase are returned"
								},
								{
									"key": "include_archived",
									"value": "<boolean>",
									"description": "If supplied with `true` then archived projects are also included in the response. By default only not archived projects are returned."
								}
							]
						},
						"description": "Returns all projects. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>."
					},
					"response": [
						{
							"name": "A list of projects.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects?cursor=<string>&limit=100&filter_id=<integer>&status=open,completed&phase_id=<integer>&include_archived=<boolean>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "open,completed"
										},
										{
											"key": "phase_id",
											"value": "<integer>"
										},
										{
											"key": "include_archived",
											"value": "<boolean>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 8,\n      \"title\": \"Project\",\n      \"description\": \"Project Description\",\n      \"status\": \"open\",\n      \"status_change_time\": \"2023-09-12 11:12:18.110\",\n      \"start_date\": \"2023-09-18\",\n      \"end_date\": \"2024-03-04\",\n      \"owner_id\": 19,\n      \"add_time\": \"2023-09-12 11:12:18.110\",\n      \"update_time\": \"2023-09-14 05:45:40.084\",\n      \"labels\": [\n        13,\n        14\n      ],\n      \"archive_time\": \"2023-09-15 11:12:18.110\",\n      \"deal_ids\": [\n        1,\n        2\n      ],\n      \"person_id\": 2,\n      \"org_id\": 3,\n      \"board_id\": 1,\n      \"phase_id\": 1\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						}
					]
				},
				{
					"name": "Add a project",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"board_id\": \"<number>\",\n  \"phase_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"status\": \"<string>\",\n  \"owner_id\": \"<number>\",\n  \"start_date\": \"<date>\",\n  \"end_date\": \"<date>\",\n  \"deal_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"org_id\": \"<number>\",\n  \"person_id\": \"<number>\",\n  \"labels\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"template_id\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "Adds a new project. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys."
					},
					"response": [
						{
							"name": "Created project.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"board_id\": \"<number>\",\n  \"phase_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"status\": \"<string>\",\n  \"owner_id\": \"<number>\",\n  \"start_date\": \"<date>\",\n  \"end_date\": \"<date>\",\n  \"deal_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"org_id\": \"<number>\",\n  \"person_id\": \"<number>\",\n  \"labels\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"template_id\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"title\": \"Project\",\n    \"description\": \"Project Description\",\n    \"status\": \"open\",\n    \"status_change_time\": \"2023-09-12 11:12:18.110\",\n    \"start_date\": \"2023-09-18\",\n    \"end_date\": \"2024-03-04\",\n    \"owner_id\": 19,\n    \"add_time\": \"2023-09-12 11:12:18.110\",\n    \"update_time\": \"2023-09-14 05:45:40.084\",\n    \"labels\": [\n      13,\n      14\n    ],\n    \"archive_time\": \"2023-09-15 11:12:18.110\",\n    \"deal_ids\": [\n      1,\n      2\n    ],\n    \"person_id\": 2,\n    \"org_id\": 3,\n    \"board_id\": 1,\n    \"phase_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get details of a project",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Returns the details of a specific project. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of project fields."
					},
					"response": [
						{
							"name": "Get a project.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"title\": \"Project\",\n    \"description\": \"Project Description\",\n    \"status\": \"open\",\n    \"status_change_time\": \"2023-09-12 11:12:18.110\",\n    \"start_date\": \"2023-09-18\",\n    \"end_date\": \"2024-03-04\",\n    \"owner_id\": 19,\n    \"add_time\": \"2023-09-12 11:12:18.110\",\n    \"update_time\": \"2023-09-14 05:45:40.084\",\n    \"labels\": [\n      13,\n      14\n    ],\n    \"archive_time\": \"2023-09-15 11:12:18.110\",\n    \"deal_ids\": [\n      1,\n      2\n    ],\n    \"person_id\": 2,\n    \"org_id\": 3,\n    \"board_id\": 1,\n    \"phase_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Update a project",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"board_id\": \"<number>\",\n  \"phase_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"status\": \"<string>\",\n  \"owner_id\": \"<number>\",\n  \"start_date\": \"<date>\",\n  \"end_date\": \"<date>\",\n  \"deal_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"org_id\": \"<number>\",\n  \"person_id\": \"<number>\",\n  \"labels\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Updates a project."
					},
					"response": [
						{
							"name": "Updated project.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"board_id\": \"<number>\",\n  \"phase_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"status\": \"<string>\",\n  \"owner_id\": \"<number>\",\n  \"start_date\": \"<date>\",\n  \"end_date\": \"<date>\",\n  \"deal_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"org_id\": \"<number>\",\n  \"person_id\": \"<number>\",\n  \"labels\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"title\": \"Project\",\n    \"description\": \"Project Description\",\n    \"status\": \"open\",\n    \"status_change_time\": \"2023-09-12 11:12:18.110\",\n    \"start_date\": \"2023-09-18\",\n    \"end_date\": \"2024-03-04\",\n    \"owner_id\": 19,\n    \"add_time\": \"2023-09-12 11:12:18.110\",\n    \"update_time\": \"2023-09-14 05:45:40.084\",\n    \"labels\": [\n      13,\n      14\n    ],\n    \"archive_time\": \"2023-09-15 11:12:18.110\",\n    \"deal_ids\": [\n      1,\n      2\n    ],\n    \"person_id\": 2,\n    \"org_id\": 3,\n    \"board_id\": 1,\n    \"phase_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Delete a project",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Marks a project as deleted."
					},
					"response": [
						{
							"name": "Delete a project.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Archive a project",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id/archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"archive"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Archives a project."
					},
					"response": [
						{
							"name": "Updated project.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/archive?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"archive"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"title\": \"Project\",\n    \"description\": \"Project Description\",\n    \"status\": \"open\",\n    \"status_change_time\": \"2023-09-12 11:12:18.110\",\n    \"start_date\": \"2023-09-18\",\n    \"end_date\": \"2024-03-04\",\n    \"owner_id\": 19,\n    \"add_time\": \"2023-09-12 11:12:18.110\",\n    \"update_time\": \"2023-09-14 05:45:40.084\",\n    \"labels\": [\n      13,\n      14\n    ],\n    \"archive_time\": \"2023-09-15 11:12:18.110\",\n    \"deal_ids\": [\n      1,\n      2\n    ],\n    \"person_id\": 2,\n    \"org_id\": 3,\n    \"board_id\": 1,\n    \"phase_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Returns project plan",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id/plan",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"plan"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Returns information about items in a project plan. Items consists of tasks and activities and are linked to specific project phase and group."
					},
					"response": [
						{
							"name": "Get a project plan.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/plan?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"plan"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"item_id\": 1,\n      \"item_type\": \"task\",\n      \"phase_id\": 2,\n      \"group_id\": 3\n    },\n    {\n      \"item_id\": 1,\n      \"item_type\": \"activity\",\n      \"phase_id\": 2,\n      \"group_id\": 3\n    }\n  ],\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Update activity in project plan",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"phase_id\": \"<number>\",\n  \"group_id\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects/:id/plan/activities/:activityId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"plan",
								"activities",
								":activityId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								},
								{
									"key": "activityId",
									"value": "<integer>",
									"description": "(Required) The ID of the activity"
								}
							]
						},
						"description": "Updates an activity phase or group in a project."
					},
					"response": [
						{
							"name": "Updated activity in plan.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"phase_id\": \"<number>\",\n  \"group_id\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:id/plan/activities/:activityId?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"plan",
										"activities",
										":activityId"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										},
										{
											"key": "activityId",
											"value": "<integer>",
											"description": "(Required) The ID of the activity"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"item_id\": 1,\n    \"item_type\": \"activity\",\n    \"phase_id\": 2,\n    \"group_id\": 3\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Update task in project plan",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"phase_id\": \"<number>\",\n  \"group_id\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects/:id/plan/tasks/:taskId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"plan",
								"tasks",
								":taskId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								},
								{
									"key": "taskId",
									"value": "<integer>",
									"description": "(Required) The ID of the task"
								}
							]
						},
						"description": "Updates a task phase or group in a project."
					},
					"response": [
						{
							"name": "Updated task in plan.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"phase_id\": \"<number>\",\n  \"group_id\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:id/plan/tasks/:taskId?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"plan",
										"tasks",
										":taskId"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										},
										{
											"key": "taskId",
											"value": "<integer>",
											"description": "(Required) The ID of the task"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"item_id\": 1,\n    \"item_type\": \"task\",\n    \"phase_id\": 2,\n    \"group_id\": 3\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Returns project groups",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"groups"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Returns all active groups under a specific project."
					},
					"response": [
						{
							"name": "Get a project groups.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/groups?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"groups"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Group one\",\n      \"order_nr\": 1\n    }\n  ],\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Returns project tasks",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"tasks"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Returns tasks linked to a specific project."
					},
					"response": [
						{
							"name": "A list of tasks.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/tasks?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"tasks"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"title\": \"Task 1\",\n      \"creator_id\": 2,\n      \"description\": \"Task description\",\n      \"done\": 0,\n      \"due_date\": \"2023-10-11\",\n      \"parent_task_id\": 2,\n      \"assignee_id\": 2,\n      \"add_time\": \"2023-09-14 08:14:40.288\",\n      \"update_time\": \"2023-09-14 08:14:40.288\",\n      \"marked_as_done_time\": \"2023-09-22 08:14:40.288\",\n      \"project_id\": 1\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						}
					]
				},
				{
					"name": "Returns project activities",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id/activities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"activities"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Returns activities linked to a specific project."
					},
					"response": [
						{
							"name": "A collection of activities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/activities?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"activities"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 8,\n      \"company_id\": 22122,\n      \"user_id\": 1234,\n      \"done\": false,\n      \"type\": \"deadline\",\n      \"conference_meeting_client\": \"871b8bc88d3a1202\",\n      \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n      \"conference_meeting_id\": \"17058746701\",\n      \"due_date\": \"2022-06-09\",\n      \"due_time\": \"10:00\",\n      \"duration\": \"01:00\",\n      \"busy_flag\": true,\n      \"add_time\": \"2020-06-08 12:37:56\",\n      \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n      \"subject\": \"Deadline\",\n      \"public_description\": \"This is a description\",\n      \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n      \"org_id\": 5,\n      \"person_id\": 1101,\n      \"deal_id\": 300,\n      \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"project_id\": null,\n      \"active_flag\": true,\n      \"update_time\": \"2020-08-08 12:37:56\",\n      \"update_user_id\": 5596,\n      \"source_timezone\": \"\",\n      \"location_subpremise\": \"\",\n      \"location_street_number\": \"3\",\n      \"location_route\": \"Mustamäe tee\",\n      \"location_sublocality\": \"Kristiine\",\n      \"location_locality\": \"Tallinn\",\n      \"location_admin_area_level_1\": \"Harju maakond\",\n      \"location_admin_area_level_2\": \"\",\n      \"location_country\": \"Estonia\",\n      \"location_postal_code\": \"10616\",\n      \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\"\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get all project boards",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/boards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"boards"
							]
						},
						"description": "Returns all projects boards that are not deleted."
					},
					"response": [
						{
							"name": "A list of project board.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/boards?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"boards"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Project Board\",\n      \"order_nr\": 1,\n      \"add_time\": \"2023-09-12 11:12:18\",\n      \"update_time\": \"2023-09-14 05:45:40\"\n    }\n  ],\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get project phases",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/phases?board_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"phases"
							],
							"query": [
								{
									"key": "board_id",
									"value": "<integer>",
									"description": "(Required) ID of the board for which phases are requested"
								}
							]
						},
						"description": "Returns all active project phases under a specific board."
					},
					"response": [
						{
							"name": "A list of project phases.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/phases?board_id=1&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"phases"
									],
									"query": [
										{
											"key": "board_id",
											"value": "1"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 2,\n      \"name\": \"Project Phase\",\n      \"board_id\": 1,\n      \"order_nr\": 2,\n      \"add_time\": \"2023-09-12 11:12:18\",\n      \"update_time\": \"2023-09-14 05:45:40\"\n    }\n  ],\n  \"additional_data\": null\n}"
						}
					]
				}
			],
			"description": "Projects represent ongoing, completed or canceled projects attached to an organization, person or to deals. Each project has an owner and must be placed in a phase. Each project consists of standard data fields but can also contain a number of custom fields. The custom fields can be recognized by long hashes as keys.\n"
		},
		{
			"name": "ProjectTemplates",
			"item": [
				{
					"name": "Get details of a board",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/boards/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"boards",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project board"
								}
							]
						},
						"description": "Returns the details of a specific project board."
					},
					"response": [
						{
							"name": "Get a project board.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/boards/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"boards",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project board"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Project Board\",\n    \"order_nr\": 1,\n    \"add_time\": \"2023-09-12 11:12:18\",\n    \"update_time\": \"2023-09-14 05:45:40\"\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get details of a phase",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/phases/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"phases",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project phase"
								}
							]
						},
						"description": "Returns the details of a specific project phase."
					},
					"response": [
						{
							"name": "Get a project phase.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/phases/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"phases",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project phase"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"name\": \"Project Phase\",\n    \"board_id\": 1,\n    \"order_nr\": 2,\n    \"add_time\": \"2023-09-12 11:12:18\",\n    \"update_time\": \"2023-09-14 05:45:40\"\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get all project templates",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projectTemplates?cursor=<string>&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projectTemplates"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, up to 500 items will be returned."
								}
							]
						},
						"description": "Returns all not deleted project templates. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>."
					},
					"response": [
						{
							"name": "A list of project template.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projectTemplates?cursor=<string>&limit=500&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projectTemplates"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "500"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"title\": \"Template Title\",\n      \"description\": \"Template Description\",\n      \"projects_board_id\": 2,\n      \"owner_id\": 3,\n      \"add_time\": \"2023-09-14 08:14:40.288\",\n      \"update_time\": \"2023-09-14 08:14:40.288\"\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get details of a template",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projectTemplates/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projectTemplates",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project template"
								}
							]
						},
						"description": "Returns the details of a specific project template."
					},
					"response": [
						{
							"name": "Get a project template.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projectTemplates/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projectTemplates",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project template"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"title\": \"Template Title\",\n    \"description\": \"Template Description\",\n    \"projects_board_id\": 2,\n    \"owner_id\": 3,\n    \"add_time\": \"2023-09-14 08:14:40.288\",\n    \"update_time\": \"2023-09-14 08:14:40.288\"\n  },\n  \"additional_data\": null\n}"
						}
					]
				}
			],
			"description": "Project templates allow you to have reusable and dynamic structure to simplify creation of a project. Project template can contain information about activities, tasks and groups that will be used when creating a project.\n"
		},
		{
			"name": "Recents",
			"item": [
				{
					"name": "Get recents",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recents?since_timestamp=<string>&items=<string>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recents"
							],
							"query": [
								{
									"key": "since_timestamp",
									"value": "<string>",
									"description": "(Required) The timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS."
								},
								{
									"key": "items",
									"value": "<string>",
									"description": "Multiple selection of item types to include in the query (optional)"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all recent changes occurred after the given timestamp."
					},
					"response": [
						{
							"name": "List of items changed since \"since_timestamp\"",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recents?since_timestamp=<string>&items=<string>&start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recents"
									],
									"query": [
										{
											"key": "since_timestamp",
											"value": "<string>"
										},
										{
											"key": "items",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"item\": \"activity\",\n      \"id\": 8,\n      \"data\": {\n        \"id\": 8,\n        \"company_id\": 22122,\n        \"user_id\": 1234,\n        \"done\": false,\n        \"type\": \"deadline\",\n        \"reference_type\": \"scheduler-service\",\n        \"reference_id\": 7,\n        \"conference_meeting_client\": \"871b8bc88d3a1202\",\n        \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n        \"conference_meeting_id\": \"17058746701\",\n        \"due_date\": \"2020-06-09\",\n        \"due_time\": \"10:00\",\n        \"duration\": \"01:00\",\n        \"busy_flag\": true,\n        \"add_time\": \"2020-06-08 12:37:56\",\n        \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n        \"last_notification_time\": \"2020-08-08 12:37:56\",\n        \"last_notification_user_id\": 7655,\n        \"notification_language_id\": 1,\n        \"subject\": \"Deadline\",\n        \"public_description\": \"This is a description\",\n        \"calendar_sync_include_context\": \"\",\n        \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n        \"org_id\": 5,\n        \"person_id\": 1101,\n        \"deal_id\": 300,\n        \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n        \"project_id\": null,\n        \"active_flag\": true,\n        \"update_time\": \"2020-08-08 12:37:56\",\n        \"update_user_id\": 5596,\n        \"gcal_event_id\": \"\",\n        \"google_calendar_id\": \"\",\n        \"google_calendar_etag\": \"\",\n        \"source_timezone\": \"\",\n        \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n        \"rec_rule_extension\": \"\",\n        \"rec_master_activity_id\": 1,\n        \"series\": [],\n        \"note\": \"A note for the activity\",\n        \"created_by_user_id\": 1234,\n        \"location_subpremise\": \"\",\n        \"location_street_number\": \"3\",\n        \"location_route\": \"Mustamäe tee\",\n        \"location_sublocality\": \"Kristiine\",\n        \"location_locality\": \"Tallinn\",\n        \"location_admin_area_level_1\": \"Harju maakond\",\n        \"location_admin_area_level_2\": \"\",\n        \"location_country\": \"Estonia\",\n        \"location_postal_code\": \"10616\",\n        \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n        \"attendees\": [\n          {\n            \"email_address\": \"attendee@pipedrivemail.com\",\n            \"is_organizer\": 0,\n            \"name\": \"Attendee\",\n            \"person_id\": 25312,\n            \"status\": \"noreply\",\n            \"user_id\": null\n          }\n        ],\n        \"participants\": [\n          {\n            \"person_id\": 17985,\n            \"primary_flag\": false\n          },\n          {\n            \"person_id\": 1101,\n            \"primary_flag\": true\n          }\n        ],\n        \"org_name\": \"Organization\",\n        \"person_name\": \"Person\",\n        \"deal_title\": \"Deal\",\n        \"owner_name\": \"Creator\",\n        \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n        \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n        \"assigned_to_user_id\": 1235,\n        \"file\": {\n          \"id\": \"376892,\",\n          \"clean_name\": \"Audio 10:55:07.m4a\",\n          \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n        }\n      }\n    },\n    {\n      \"item\": \"deal\",\n      \"id\": 1,\n      \"data\": {\n        \"id\": 1,\n        \"creator_user_id\": 8877,\n        \"user_id\": 8877,\n        \"person_id\": 1101,\n        \"org_id\": 5,\n        \"stage_id\": 2,\n        \"title\": \"Deal One\",\n        \"value\": 5000,\n        \"currency\": \"EUR\",\n        \"add_time\": \"2019-05-29 04:21:51\",\n        \"update_time\": \"2019-11-28 16:19:50\",\n        \"stage_change_time\": \"2019-11-28 15:41:22\",\n        \"active\": true,\n        \"deleted\": false,\n        \"status\": \"open\",\n        \"probability\": null,\n        \"next_activity_date\": \"2019-11-29\",\n        \"next_activity_time\": \"11:30:00\",\n        \"next_activity_id\": 128,\n        \"last_activity_id\": null,\n        \"last_activity_date\": null,\n        \"lost_reason\": null,\n        \"visible_to\": \"1\",\n        \"close_time\": null,\n        \"pipeline_id\": 1,\n        \"won_time\": \"2019-11-27 11:40:36\",\n        \"first_won_time\": \"2019-11-27 11:40:36\",\n        \"lost_time\": \"2019-11-27 11:40:36\",\n        \"products_count\": 0,\n        \"files_count\": 0,\n        \"notes_count\": 2,\n        \"followers_count\": 0,\n        \"email_messages_count\": 4,\n        \"activities_count\": 1,\n        \"done_activities_count\": 0,\n        \"undone_activities_count\": 1,\n        \"participants_count\": 1,\n        \"expected_close_date\": \"2019-06-29\",\n        \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n        \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n        \"label\": \"11\",\n        \"stage_order_nr\": 2,\n        \"person_name\": \"Person\",\n        \"org_name\": \"Organization\",\n        \"next_activity_subject\": \"Call\",\n        \"next_activity_type\": \"call\",\n        \"next_activity_duration\": \"00:30:00\",\n        \"next_activity_note\": \"Note content\",\n        \"formatted_value\": \"€5,000\",\n        \"weighted_value\": 5000,\n        \"formatted_weighted_value\": \"€5,000\",\n        \"weighted_value_currency\": \"EUR\",\n        \"rotten_time\": null,\n        \"owner_name\": \"Creator\",\n        \"cc_email\": \"company+deal1@pipedrivemail.com\",\n        \"org_hidden\": false,\n        \"person_hidden\": false\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"since_timestamp\": \"2020-10-10 00:00:00\",\n    \"last_timestamp_on_page\": \"2020-10-15 18:18:41\",\n    \"pagination\\\"\": {\n      \"start\": \"0,\",\n      \"limit\": \"100,\",\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Recent changes across all item types in Pipedrive (deals, persons, etc).\n"
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "Get all roles",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns all the roles within the company."
					},
					"response": [
						{
							"name": "Get all roles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"parent_role_id\": 1,\n      \"name\": \"(Unassigned users)\",\n      \"active_flag\": true,\n      \"assignment_count\": \"0\",\n      \"sub_role_count\": \"0\",\n      \"level\": 1\n    },\n    {\n      \"id\": 2,\n      \"parent_role_id\": 1,\n      \"name\": \"Admins\",\n      \"active_flag\": true,\n      \"assignment_count\": \"1\",\n      \"sub_role_count\": \"1\",\n      \"level\": 1\n    },\n    {\n      \"id\": 3,\n      \"parent_role_id\": 2,\n      \"name\": \"Reviewers\",\n      \"active_flag\": true,\n      \"assignment_count\": \"1\",\n      \"sub_role_count\": \"0\",\n      \"level\": 2\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"parent_role_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						},
						"description": "Adds a new role."
					},
					"response": [
						{
							"name": "Add a role",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"parent_role_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Marks a role as deleted."
					},
					"response": [
						{
							"name": "Delete a role",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2\n  }\n}"
						}
					]
				},
				{
					"name": "Get one role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Returns the details of a specific role."
					},
					"response": [
						{
							"name": "Get one role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"parent_role_id\": 1,\n    \"name\": \"Admins\",\n    \"active_flag\": true,\n    \"assignment_count\": \"1\",\n    \"sub_role_count\": \"1\"\n  },\n  \"additional_data\": {\n    \"settings\": {\n      \"deal_default_visibility\": 1,\n      \"lead_default_visibility\": 1,\n      \"org_default_visibility\": 1,\n      \"person_default_visibility\": 1,\n      \"product_default_visibility\": 1\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update role details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_role_id\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Updates the parent role and/or the name of a specific role."
					},
					"response": [
						{
							"name": "Update role details",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"parent_role_id\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a role assignment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles/:id/assignments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"assignments"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Removes the assigned user from a role and adds to the default role."
					},
					"response": [
						{
							"name": "Delete assignment from a role",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles/:id/assignments?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"assignments"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2\n  }\n}"
						}
					]
				},
				{
					"name": "List role assignments",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:id/assignments?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"assignments"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Returns all users assigned to a role."
					},
					"response": [
						{
							"name": "List assignments for a role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:id/assignments?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"assignments"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 1234567,\n      \"role_id\": 2,\n      \"parent_role_id\": 1,\n      \"name\": \"Admins\",\n      \"active_flag\": true,\n      \"type\": \"1\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add role assignment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles/:id/assignments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"assignments"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Assigns a user to a role."
					},
					"response": [
						{
							"name": "Add assignment for a role",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles/:id/assignments?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"assignments"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"user_id\": 1234567,\n    \"role_id\": 2\n  }\n}"
						}
					]
				},
				{
					"name": "List role settings",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:id/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"settings"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Returns the visibility settings of a specific role."
					},
					"response": [
						{
							"name": "List role settings",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:id/settings?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"settings"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"deal_default_visibility\": 1,\n    \"lead_default_visibility\": 1,\n    \"org_default_visibility\": 1,\n    \"person_default_visibility\": 1,\n    \"product_default_visibility\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Add or update role setting",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"setting_key\": \"<string>\",\n  \"value\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles/:id/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"settings"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Adds or updates the visibility setting for a role."
					},
					"response": [
						{
							"name": "List role settings",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"setting_key\": \"<string>\",\n  \"value\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles/:id/settings?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"settings"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"deal_default_visibility\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "List pipeline visibility for a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:id/pipelines?visible=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"pipelines"
							],
							"query": [
								{
									"key": "visible",
									"value": "true",
									"description": "Whether to return the visible or hidden pipelines for the role"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Returns the list of either visible or hidden pipeline IDs for a specific role. For more information on pipeline visibility, please refer to the <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">Visibility groups article</a>."
					},
					"response": [
						{
							"name": "Get either visible or hidden pipeline ids for a role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:id/pipelines?visible=true&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"pipelines"
									],
									"query": [
										{
											"key": "visible",
											"value": "true"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"pipeline_ids\": [\n      2\n    ],\n    \"visible\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Update pipeline visibility for a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"visible_pipeline_ids\": \"<object>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles/:id/pipelines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"pipelines"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Updates the specified pipelines to be visible and/or hidden for a specific role. For more information on pipeline visibility, please refer to the <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">Visibility groups article</a>."
					},
					"response": [
						{
							"name": "Update pipeline visibility for a role",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visible_pipeline_ids\": \"<object>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles/:id/pipelines?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"pipelines"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"pipeline_ids\": [\n      1,\n      2\n    ],\n    \"visible\": true\n  }\n}"
						}
					]
				}
			],
			"description": "Roles are a part of the Visibility groups’ feature that allow the admin user to categorize other users and dictate what items they will be allowed access to see.\n"
		},
		{
			"name": "Stages",
			"item": [
				{
					"name": "Delete multiple stages in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated stage IDs to delete"
								}
							]
						},
						"description": "Marks multiple stages as deleted. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Stages#deleteStage\" target=\"_blank\" rel=\"noopener noreferrer\">DELETE /api/v2/stages/{id}</a> instead."
					},
					"response": [
						{
							"name": "Delete multiple stages",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages?ids=<string>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      1,\n      2\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all stages",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages?pipeline_id=<integer>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages"
							],
							"query": [
								{
									"key": "pipeline_id",
									"value": "<integer>",
									"description": "The ID of the pipeline to fetch stages for. If omitted, stages for all pipelines will be fetched."
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all stages."
					},
					"response": [
						{
							"name": "Get all stages",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages?pipeline_id=<integer>&start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									],
									"query": [
										{
											"key": "pipeline_id",
											"value": "<integer>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"order_nr\": 1,\n      \"name\": \"Stage Name\",\n      \"active_flag\": true,\n      \"deal_probability\": 100,\n      \"pipeline_id\": 1,\n      \"rotten_flag\": false,\n      \"rotten_days\": 1,\n      \"add_time\": \"2017-08-03 12:51:18\",\n      \"update_time\": \"2020-03-23 13:15:25\",\n      \"pipeline_name\": \"Pipeline\",\n      \"pipeline_deal_probability\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a new stage",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"pipeline_id\": \"<integer>\",\n  \"deal_probability\": \"<integer>\",\n  \"rotten_flag\": \"<boolean>\",\n  \"rotten_days\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages"
							]
						},
						"description": "Adds a new stage, returns the ID upon success."
					},
					"response": [
						{
							"name": "Get all stages",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"pipeline_id\": \"<integer>\",\n  \"deal_probability\": \"<integer>\",\n  \"rotten_flag\": \"<boolean>\",\n  \"rotten_days\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/stages?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"order_nr\": 1,\n    \"name\": \"Stage Name\",\n    \"active_flag\": true,\n    \"deal_probability\": 100,\n    \"pipeline_id\": 1,\n    \"rotten_flag\": false,\n    \"rotten_days\": 1,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a stage",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the stage"
								}
							]
						},
						"description": "Marks a stage as deleted."
					},
					"response": [
						{
							"name": "Delete stage",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get one stage",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages/:id?everyone=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages",
								":id"
							],
							"query": [
								{
									"key": "everyone",
									"value": "<number>",
									"description": "If `everyone=1` is provided, deals summary will return deals owned by every user"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the stage"
								}
							]
						},
						"description": "Returns data about a specific stage."
					},
					"response": [
						{
							"name": "Get stage",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id?everyone=<number>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"query": [
										{
											"key": "everyone",
											"value": "<number>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"order_nr\": 1,\n    \"name\": \"Stage Name\",\n    \"active_flag\": true,\n    \"deal_probability\": 100,\n    \"pipeline_id\": 1,\n    \"rotten_flag\": false,\n    \"rotten_days\": 1,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\",\n    \"deals_summary\": {\n      \"per_stages\": {\n        \"1\": {\n          \"EUR\": {\n            \"count\": 1,\n            \"value\": 10,\n            \"value_formatted\": \"10 €\",\n            \"weighted_value\": 10,\n            \"weighted_value_formatted\": \"10€\"\n          }\n        }\n      },\n      \"per_currency\": {\n        \"EUR\": 1\n      },\n      \"total_count\": 1,\n      \"per_currency_full\": {\n        \"EUR\": {\n          \"count\": 1,\n          \"value\": 10\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update stage details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"pipeline_id\": \"<integer>\",\n  \"deal_probability\": \"<integer>\",\n  \"rotten_flag\": \"<boolean>\",\n  \"rotten_days\": \"<integer>\",\n  \"order_nr\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stages/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the stage"
								}
							]
						},
						"description": "Updates the properties of a stage."
					},
					"response": [
						{
							"name": "Get all stages",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"pipeline_id\": \"<integer>\",\n  \"deal_probability\": \"<integer>\",\n  \"rotten_flag\": \"<boolean>\",\n  \"rotten_days\": \"<integer>\",\n  \"order_nr\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/stages/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"order_nr\": 1,\n    \"name\": \"Stage Name\",\n    \"active_flag\": true,\n    \"deal_probability\": 100,\n    \"pipeline_id\": 1,\n    \"rotten_flag\": false,\n    \"rotten_days\": 1,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals in a stage",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages/:id/deals?filter_id=<integer>&user_id=<integer>&everyone=<number>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages",
								":id",
								"deals"
							],
							"query": [
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given filter will be returned"
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, `filter_id` will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned."
								},
								{
									"key": "everyone",
									"value": "<number>",
									"description": "If supplied, `filter_id` and `user_id` will not be considered – instead, deals owned by everyone will be returned"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the stage"
								}
							]
						},
						"description": "Lists deals in a specific stage. If no parameters are provided open deals owned by the authorized user will be returned. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Deals#getDeals\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/deals?stage_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Get deals in a stage",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id/deals?filter_id=<integer>&user_id=<integer>&everyone=<number>&start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id",
										"deals"
									],
									"query": [
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "everyone",
											"value": "<number>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": 123,\n      \"user_id\": 456,\n      \"person_id\": 1,\n      \"org_id\": 2,\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 5000,\n      \"currency\": \"EUR\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-05-29 04:21:51\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Stage is a logical component of a pipeline, and essentially a bucket that can hold a number of deals. In the context of the pipeline a stage belongs to, it has an order number which defines the order of stages in that pipeline.\n"
		},
		{
			"name": "Subscriptions",
			"item": [
				{
					"name": "Get details of a subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Returns details of an installment or a recurring subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Marks an installment or a recurring subscription as deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Find subscription by deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions/find/:dealId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"find",
								":dealId"
							],
							"variable": [
								{
									"key": "dealId",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Returns details of an installment or a recurring subscription by the deal ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/find/:dealId?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"find",
										":dealId"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "dealId",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Get all payments of a subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions/:id/payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								":id",
								"payments"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Returns all payments of an installment or recurring subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:id/payments?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":id",
										"payments"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 59,\n      \"subscription_id\": 22,\n      \"deal_id\": 35,\n      \"is_active\": true,\n      \"amount\": 1000,\n      \"currency\": \"usd\",\n      \"change_amount\": 1000,\n      \"due_at\": \"2020-10-05\",\n      \"revenue_movement_type\": \"new\",\n      \"payment_type\": \"recurring\",\n      \"description\": \"\",\n      \"add_time\": \"2020-07-30 13:54:59\",\n      \"update_time\": \"2020-07-30 13:54:59\"\n    },\n    {\n      \"id\": 62,\n      \"subscription_id\": 22,\n      \"deal_id\": 35,\n      \"is_active\": true,\n      \"amount\": 100,\n      \"currency\": \"usd\",\n      \"change_amount\": 0,\n      \"due_at\": \"2020-10-05\",\n      \"revenue_movement_type\": \"none\",\n      \"payment_type\": \"additional\",\n      \"description\": \"setup fee\",\n      \"add_time\": \"2020-07-30 13:54:59\",\n      \"update_time\": \"2020-07-30 13:54:59\"\n    },\n    {\n      \"id\": 60,\n      \"subscription_id\": 22,\n      \"deal_id\": 35,\n      \"is_active\": true,\n      \"amount\": 1000,\n      \"currency\": \"usd\",\n      \"change_amount\": 0,\n      \"due_at\": \"2020-11-05\",\n      \"revenue_movement_type\": \"recurring\",\n      \"payment_type\": \"recurring\",\n      \"description\": \"\",\n      \"add_time\": \"2020-07-30 13:54:59\",\n      \"update_time\": \"2020-07-30 13:54:59\"\n    },\n    {\n      \"id\": 61,\n      \"subscription_id\": 22,\n      \"deal_id\": 35,\n      \"is_active\": true,\n      \"amount\": 0,\n      \"currency\": \"usd\",\n      \"change_amount\": -1000,\n      \"due_at\": \"2020-12-05\",\n      \"revenue_movement_type\": \"churn\",\n      \"payment_type\": \"recurring\",\n      \"description\": \"\",\n      \"add_time\": \"2020-07-30 13:54:59\",\n      \"update_time\": \"2020-07-30 13:54:59\"\n    },\n    {\n      \"id\": 63,\n      \"subscription_id\": 22,\n      \"deal_id\": 35,\n      \"is_active\": true,\n      \"amount\": 150,\n      \"currency\": \"usd\",\n      \"change_amount\": 0,\n      \"due_at\": \"2020-12-05\",\n      \"revenue_movement_type\": \"none\",\n      \"payment_type\": \"additional\",\n      \"description\": \"cancelation fee\",\n      \"add_time\": \"2020-07-30 13:54:59\",\n      \"update_time\": \"2020-07-30 13:54:59\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a recurring subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"deal_id\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"cadence_type\": \"<string>\",\n  \"start_date\": \"<date>\",\n  \"cycle_amount\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"cycles_count\": \"<integer>\",\n  \"infinite\": \"<boolean>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscriptions/recurring",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"recurring"
							]
						},
						"description": "Adds a new recurring subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deal_id\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"cadence_type\": \"<string>\",\n  \"start_date\": \"<date>\",\n  \"cycle_amount\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"cycles_count\": \"<integer>\",\n  \"infinite\": \"<boolean>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions/recurring?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"recurring"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Add an installment subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"deal_id\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscriptions/installment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"installment"
							]
						},
						"description": "Adds a new installment subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deal_id\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions/installment?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"installment"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 0,\n    \"cycles_count\": 0,\n    \"infinite\": false,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 250,\n    \"cadence_type\": \"custom\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Update a recurring subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"effective_date\": \"<date>\",\n  \"description\": \"<string>\",\n  \"cycle_amount\": \"<integer>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscriptions/recurring/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"recurring",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Updates a recurring subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"effective_date\": \"<date>\",\n  \"description\": \"<string>\",\n  \"cycle_amount\": \"<integer>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions/recurring/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"recurring",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Update an installment subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscriptions/installment/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"installment",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Updates an installment subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions/installment/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"installment",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 0,\n    \"cycles_count\": 0,\n    \"infinite\": false,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 250,\n    \"cadence_type\": \"custom\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Cancel a recurring subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"end_date\": \"<date>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscriptions/recurring/:id/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"recurring",
								":id",
								"cancel"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Cancels a recurring subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"end_date\": \"<date>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions/recurring/:id/cancel?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"recurring",
										":id",
										"cancel"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				}
			],
			"description": "Subscriptions represent the revenue that is occurring over time with payments of varying amounts and payment dates (installment subscription) or over fixed intervals of time with payments of the same amount (recurring subscription).\n"
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get all tasks",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks?cursor=<string>&limit=<integer>&assignee_id=<integer>&project_id=<integer>&parent_task_id=<integer>&done=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, up to 500 items will be returned."
								},
								{
									"key": "assignee_id",
									"value": "<integer>",
									"description": "If supplied, only tasks that are assigned to this user are returned"
								},
								{
									"key": "project_id",
									"value": "<integer>",
									"description": "If supplied, only tasks that are assigned to this project are returned"
								},
								{
									"key": "parent_task_id",
									"value": "<integer>",
									"description": "If `null` is supplied then only parent tasks are returned. If integer is supplied then only subtasks of a specific task are returned. By default all tasks are returned."
								},
								{
									"key": "done",
									"value": "<number>",
									"description": "Whether the task is done or not. `0` = Not done, `1` = Done. If not omitted then returns both done and not done tasks."
								}
							]
						},
						"description": "Returns all tasks. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>."
					},
					"response": [
						{
							"name": "A list of tasks.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks?cursor=<string>&limit=500&assignee_id=<integer>&project_id=<integer>&parent_task_id=<integer>&done=<number>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "500"
										},
										{
											"key": "assignee_id",
											"value": "<integer>"
										},
										{
											"key": "project_id",
											"value": "<integer>"
										},
										{
											"key": "parent_task_id",
											"value": "<integer>"
										},
										{
											"key": "done",
											"value": "<number>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"title\": \"Task 1\",\n      \"creator_id\": 2,\n      \"description\": \"Task description\",\n      \"done\": 0,\n      \"due_date\": \"2023-10-11\",\n      \"parent_task_id\": 2,\n      \"assignee_id\": 2,\n      \"add_time\": \"2023-09-14 08:14:40.288\",\n      \"update_time\": \"2023-09-14 08:14:40.288\",\n      \"marked_as_done_time\": \"2023-09-22 08:14:40.288\",\n      \"project_id\": 1\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						}
					]
				},
				{
					"name": "Add a task",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"project_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"parent_task_id\": \"<number>\",\n  \"assignee_id\": \"<number>\",\n  \"done\": \"<number>\",\n  \"due_date\": \"<date>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						},
						"description": "Adds a new task."
					},
					"response": [
						{
							"name": "Created task.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"project_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"parent_task_id\": \"<number>\",\n  \"assignee_id\": \"<number>\",\n  \"done\": \"<number>\",\n  \"due_date\": \"<date>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tasks?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"title\": \"Task 1\",\n    \"creator_id\": 2,\n    \"description\": \"Task description\",\n    \"done\": 0,\n    \"due_date\": \"2023-10-11\",\n    \"parent_task_id\": 2,\n    \"assignee_id\": 2,\n    \"add_time\": \"2023-09-14 08:14:40.288\",\n    \"update_time\": \"2023-09-14 08:14:40.288\",\n    \"marked_as_done_time\": \"2023-09-22 08:14:40.288\",\n    \"project_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get details of a task",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the task"
								}
							]
						},
						"description": "Returns the details of a specific task."
					},
					"response": [
						{
							"name": "Get a task.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the task"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"title\": \"Task 1\",\n    \"creator_id\": 2,\n    \"description\": \"Task description\",\n    \"done\": 0,\n    \"due_date\": \"2023-10-11\",\n    \"parent_task_id\": 2,\n    \"assignee_id\": 2,\n    \"add_time\": \"2023-09-14 08:14:40.288\",\n    \"update_time\": \"2023-09-14 08:14:40.288\",\n    \"marked_as_done_time\": \"2023-09-22 08:14:40.288\",\n    \"project_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Update a task",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<object>",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the task"
								}
							]
						},
						"description": "Updates a task."
					},
					"response": [
						{
							"name": "Updated task.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"project_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"parent_task_id\": \"<number>\",\n  \"assignee_id\": \"<number>\",\n  \"done\": \"<number>\",\n  \"due_date\": \"<date>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the task"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"title\": \"Task 1\",\n    \"creator_id\": 2,\n    \"description\": \"Task description\",\n    \"done\": 0,\n    \"due_date\": \"2023-10-11\",\n    \"parent_task_id\": 2,\n    \"assignee_id\": 2,\n    \"add_time\": \"2023-09-14 08:14:40.288\",\n    \"update_time\": \"2023-09-14 08:14:40.288\",\n    \"marked_as_done_time\": \"2023-09-22 08:14:40.288\",\n    \"project_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Delete a task",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the task"
								}
							]
						},
						"description": "Marks a task as deleted. If the task has subtasks then those will also be deleted."
					},
					"response": [
						{
							"name": "Deleted task.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the task"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				}
			],
			"description": "Tasks represent actions that need to be completed and must be associated with a project. Tasks have an optional due date, can be assigned to a user and can have subtasks.\n"
		},
		{
			"name": "UserConnections",
			"item": [
				{
					"name": "Get all user connections",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/userConnections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userConnections"
							]
						},
						"description": "Returns data about all connections for the authorized user."
					},
					"response": [
						{
							"name": "The data of user connections",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userConnections?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userConnections"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"google\": \"awesomeid-123-4567890\"\n  }\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userConnections?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userConnections"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						}
					]
				}
			],
			"description": "Manage user connections.\n"
		},
		{
			"name": "UserSettings",
			"item": [
				{
					"name": "List settings of an authorized user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/userSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userSettings"
							]
						},
						"description": "Lists the settings of an authorized user. Example response contains a shortened list of settings."
					},
					"response": [
						{
							"name": "The list of user settings",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSettings?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSettings"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"marketplace_team\": false,\n    \"list_limit\": 100,\n    \"beta_app\": true,\n    \"prevent_salesphone_callto_override\": false,\n    \"file_upload_destination\": \"s3\",\n    \"callto_link_syntax\": \"callto:[number]\",\n    \"autofill_deal_expected_close_date\": false,\n    \"person_duplicate_condition\": \"name && (org_id || email || phone)\"\n  }\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSettings?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSettings"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						}
					]
				}
			],
			"description": "View user settings.\n"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get all users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Returns data about all users within the company."
					},
					"response": [
						{
							"name": "The list of user objects",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"John Doe\",\n      \"default_currency\": \"EUR\",\n      \"locale\": \"et_EE\",\n      \"lang\": 1,\n      \"email\": \"john@pipedrive.com\",\n      \"phone\": \"0000-0001\",\n      \"activated\": true,\n      \"last_login\": \"2019-11-21 08:45:56\",\n      \"created\": \"2018-11-13 09:16:26\",\n      \"modified\": \"2019-11-21 08:45:56\",\n      \"has_created_company\": true,\n      \"access\": [\n        {\n          \"app\": \"sales\",\n          \"admin\": true,\n          \"permission_set_id\": \"62cc4d7f-4038-4352-abf3-a8c1c822b631\"\n        },\n        {\n          \"app\": \"global\",\n          \"admin\": true,\n          \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n        },\n        {\n          \"app\": \"account_settings\",\n          \"admin\": true,\n          \"permission_set_id\": \"982c5ce5-b8ba-4b47-b102-9da024f4b990\"\n        }\n      ],\n      \"active_flag\": true,\n      \"timezone_name\": \"Europe/Berlin\",\n      \"timezone_offset\": \"+03:00\",\n      \"role_id\": 1,\n      \"icon_url\": \"https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png\",\n      \"is_you\": true,\n      \"is_deleted\": false\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Jane Doe\",\n      \"default_currency\": \"EUR\",\n      \"locale\": \"et_EE\",\n      \"lang\": 1,\n      \"email\": \"jane@pipedrive.com\",\n      \"phone\": \"0000-0002\",\n      \"activated\": true,\n      \"last_login\": \"2019-09-11 11:43:54\",\n      \"created\": \"2019-01-22 10:43:47\",\n      \"modified\": \"2019-11-21 09:49:50\",\n      \"has_created_company\": false,\n      \"access\": [\n        {\n          \"app\": \"sales\",\n          \"admin\": false,\n          \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\"\n        },\n        {\n          \"app\": \"global\",\n          \"admin\": true,\n          \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n        }\n      ],\n      \"active_flag\": true,\n      \"timezone_name\": \"Europe/Berlin\",\n      \"timezone_offset\": \"+03:00\",\n      \"role_id\": 1,\n      \"icon_url\": null,\n      \"is_you\": false,\n      \"is_deleted\": false\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a new user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<string>\",\n  \"access\": [\n    {\n      \"app\": \"sales\"\n    }\n  ],\n  \"active_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Adds a new user to the company, returns the ID upon success."
					},
					"response": [
						{
							"name": "The data of the user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"access\": [\n    {\n      \"app\": \"sales\"\n    }\n  ],\n  \"active_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"name\": \"Jane Doe\",\n    \"default_currency\": \"EUR\",\n    \"locale\": \"et_EE\",\n    \"lang\": 1,\n    \"email\": \"jane@pipedrive.com\",\n    \"phone\": \"0000-0002\",\n    \"activated\": true,\n    \"last_login\": \"2019-09-11 11:43:54\",\n    \"created\": \"2019-01-22 10:43:47\",\n    \"modified\": \"2019-11-21 09:49:50\",\n    \"has_created_company\": false,\n    \"access\": [\n      {\n        \"app\": \"sales\",\n        \"admin\": false,\n        \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\"\n      },\n      {\n        \"app\": \"global\",\n        \"admin\": true,\n        \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n      }\n    ],\n    \"active_flag\": true,\n    \"timezone_name\": \"Europe/Berlin\",\n    \"timezone_offset\": \"+03:00\",\n    \"role_id\": 1,\n    \"icon_url\": null,\n    \"is_you\": false,\n    \"is_deleted\": false\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"access\": [\n    {\n      \"app\": \"sales\"\n    }\n  ],\n  \"active_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Find users by name",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/find?term=<string>&search_by_email=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"find"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for"
								},
								{
									"key": "search_by_email",
									"value": "0",
									"description": "When enabled, the term will only be matched against email addresses of users. Default: `false`."
								}
							]
						},
						"description": "Finds users by their name."
					},
					"response": [
						{
							"name": "The list of user objects",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/find?term=<string>&search_by_email=0&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"find"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "search_by_email",
											"value": "0"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"John Doe\",\n      \"default_currency\": \"EUR\",\n      \"locale\": \"et_EE\",\n      \"lang\": 1,\n      \"email\": \"john@pipedrive.com\",\n      \"phone\": \"0000-0001\",\n      \"activated\": true,\n      \"last_login\": \"2019-11-21 08:45:56\",\n      \"created\": \"2018-11-13 09:16:26\",\n      \"modified\": \"2019-11-21 08:45:56\",\n      \"has_created_company\": true,\n      \"access\": [\n        {\n          \"app\": \"sales\",\n          \"admin\": true,\n          \"permission_set_id\": \"62cc4d7f-4038-4352-abf3-a8c1c822b631\"\n        },\n        {\n          \"app\": \"global\",\n          \"admin\": true,\n          \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n        },\n        {\n          \"app\": \"account_settings\",\n          \"admin\": true,\n          \"permission_set_id\": \"982c5ce5-b8ba-4b47-b102-9da024f4b990\"\n        }\n      ],\n      \"active_flag\": true,\n      \"timezone_name\": \"Europe/Berlin\",\n      \"timezone_offset\": \"+03:00\",\n      \"role_id\": 1,\n      \"icon_url\": \"https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png\",\n      \"is_you\": true,\n      \"is_deleted\": false\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Jane Doe\",\n      \"default_currency\": \"EUR\",\n      \"locale\": \"et_EE\",\n      \"lang\": 1,\n      \"email\": \"jane@pipedrive.com\",\n      \"phone\": \"0000-0002\",\n      \"activated\": true,\n      \"last_login\": \"2019-09-11 11:43:54\",\n      \"created\": \"2019-01-22 10:43:47\",\n      \"modified\": \"2019-11-21 09:49:50\",\n      \"has_created_company\": false,\n      \"access\": [\n        {\n          \"app\": \"sales\",\n          \"admin\": false,\n          \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\"\n        },\n        {\n          \"app\": \"global\",\n          \"admin\": true,\n          \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n        }\n      ],\n      \"active_flag\": true,\n      \"timezone_name\": \"Europe/Berlin\",\n      \"timezone_offset\": \"+03:00\",\n      \"role_id\": 1,\n      \"icon_url\": null,\n      \"is_you\": false,\n      \"is_deleted\": false\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get current user data",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Returns data about an authorized user within the company with bound company data: company ID, company name, and domain. Note that the `locale` property means 'Date/number format' in the Pipedrive account settings, not the chosen language."
					},
					"response": [
						{
							"name": "The data of the logged in user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/me?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Me\",\n    \"default_currency\": \"EUR\",\n    \"locale\": \"et_EE\",\n    \"lang\": 1,\n    \"email\": \"me@pipedrive.com\",\n    \"phone\": \"0000-0000\",\n    \"activated\": true,\n    \"last_login\": \"2019-11-21 08:45:56\",\n    \"created\": \"2018-11-13 09:16:26\",\n    \"modified\": \"2019-11-21 08:45:56\",\n    \"has_created_company\": true,\n    \"access\": [\n      {\n        \"app\": \"sales\",\n        \"admin\": true,\n        \"permission_set_id\": \"62cc4d7f-4038-4352-abf3-a8c1c822b631\"\n      },\n      {\n        \"app\": \"global\",\n        \"admin\": true,\n        \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n      },\n      {\n        \"app\": \"account_settings\",\n        \"admin\": true,\n        \"permission_set_id\": \"982c5ce5-b8ba-4b47-b102-9da024f4b990\"\n      }\n    ],\n    \"active_flag\": true,\n    \"timezone_name\": \"Europe/Berlin\",\n    \"timezone_offset\": \"+03:00\",\n    \"role_id\": 1,\n    \"icon_url\": \"https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png\",\n    \"is_you\": true,\n    \"is_deleted\": false,\n    \"company_id\": 54235233,\n    \"company_name\": \"Pipedrive\",\n    \"company_domain\": \"pipedrive-12g53f\",\n    \"company_country\": \"EE\",\n    \"company_industry\": \"IT Services\",\n    \"language\": {\n      \"language_code\": \"en\",\n      \"country_code\": \"US\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/me?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						}
					]
				},
				{
					"name": "Get one user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Returns data about a specific user within the company."
					},
					"response": [
						{
							"name": "The data of the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"name\": \"Jane Doe\",\n    \"default_currency\": \"EUR\",\n    \"locale\": \"et_EE\",\n    \"lang\": 1,\n    \"email\": \"jane@pipedrive.com\",\n    \"phone\": \"0000-0002\",\n    \"activated\": true,\n    \"last_login\": \"2019-09-11 11:43:54\",\n    \"created\": \"2019-01-22 10:43:47\",\n    \"modified\": \"2019-11-21 09:49:50\",\n    \"has_created_company\": false,\n    \"access\": [\n      {\n        \"app\": \"sales\",\n        \"admin\": false,\n        \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\"\n      },\n      {\n        \"app\": \"global\",\n        \"admin\": true,\n        \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n      }\n    ],\n    \"active_flag\": true,\n    \"timezone_name\": \"Europe/Berlin\",\n    \"timezone_offset\": \"+03:00\",\n    \"role_id\": 1,\n    \"icon_url\": null,\n    \"is_you\": false,\n    \"is_deleted\": false\n  }\n}"
						},
						{
							"name": "User with specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"User not found or not accessible.\"\n}"
						}
					]
				},
				{
					"name": "Update user details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"active_flag\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Updates the properties of a user. Currently, only `active_flag` can be updated."
					},
					"response": [
						{
							"name": "The data of the user",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active_flag\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"name\": \"Jane Doe\",\n    \"default_currency\": \"EUR\",\n    \"locale\": \"et_EE\",\n    \"lang\": 1,\n    \"email\": \"jane@pipedrive.com\",\n    \"phone\": \"0000-0002\",\n    \"activated\": true,\n    \"last_login\": \"2019-09-11 11:43:54\",\n    \"created\": \"2019-01-22 10:43:47\",\n    \"modified\": \"2019-11-21 09:49:50\",\n    \"has_created_company\": false,\n    \"access\": [\n      {\n        \"app\": \"sales\",\n        \"admin\": false,\n        \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\"\n      },\n      {\n        \"app\": \"global\",\n        \"admin\": true,\n        \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n      }\n    ],\n    \"active_flag\": true,\n    \"timezone_name\": \"Europe/Berlin\",\n    \"timezone_offset\": \"+03:00\",\n    \"role_id\": 1,\n    \"icon_url\": null,\n    \"is_you\": false,\n    \"is_deleted\": false\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active_flag\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "User with specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active_flag\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"User not found or not accessible.\"\n}"
						}
					]
				},
				{
					"name": "List followers of a user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Lists the followers of a specific user."
					},
					"response": [
						{
							"name": "The list of user IDs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/followers?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"followers"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    2,\n    5,\n    8\n  ]\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/followers?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"followers"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "List user permissions",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"permissions"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Lists aggregated permissions over all assigned permission sets for a user."
					},
					"response": [
						{
							"name": "The list of user permissions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/permissions?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"permissions"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"can_add_custom_fields\": true,\n    \"can_bulk_edit_items\": true,\n    \"can_change_visibility_of_items\": true,\n    \"can_create_own_workflow\": true\n  }\n}"
						}
					]
				},
				{
					"name": "List role assignments",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/roleAssignments?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"roleAssignments"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Lists role assignments for a user."
					},
					"response": [
						{
							"name": "List assignments for a role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/roleAssignments?start=0&limit=<integer>&api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"roleAssignments"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 1234567,\n      \"role_id\": 2,\n      \"parent_role_id\": 1,\n      \"name\": \"Admins\",\n      \"active_flag\": true,\n      \"type\": \"1\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List user role settings",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/roleSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"roleSettings"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Lists the settings of user's assigned role."
					},
					"response": [
						{
							"name": "List role settings",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/roleSettings?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"roleSettings"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"deal_default_visibility\": 1,\n    \"lead_default_visibility\": 1,\n    \"org_default_visibility\": 1,\n    \"person_default_visibility\": 1,\n    \"product_default_visibility\": 1\n  }\n}"
						}
					]
				}
			],
			"description": "Users are people with access to your Pipedrive account. A user may belong to one or many Pipedrive accounts, so deleting a user from one Pipedrive account will not remove the user from the data store if he/she is connected to multiple accounts. Users should not be confused with persons.\n"
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Get all Webhooks",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						},
						"description": "Returns data about all the Webhooks of a company."
					},
					"response": [
						{
							"name": "The list of webhooks objects from the logged in company and user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\",\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"company_id\": 1,\n      \"owner_id\": 1,\n      \"user_id\": 1,\n      \"event_action\": \"added\",\n      \"event_object\": \"activityType\",\n      \"subscription_url\": \"http://example.org\",\n      \"version\": \"2.0\",\n      \"is_active\": 1,\n      \"add_time\": \"2019-10-25T08:25:27.000Z\",\n      \"remove_time\": null,\n      \"type\": \"general\",\n      \"http_auth_user\": null,\n      \"http_auth_password\": null,\n      \"remove_reason\": null,\n      \"last_delivery_time\": null,\n      \"last_http_status\": null,\n      \"admin_id\": 1\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						}
					]
				},
				{
					"name": "Create a new Webhook",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subscription_url\": \"<string>\",\n  \"event_action\": \"<string>\",\n  \"event_object\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"http_auth_user\": \"<string>\",\n  \"http_auth_password\": \"<string>\",\n  \"version\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						},
						"description": "Creates a new Webhook and returns its details. Note that specifying an event which triggers the Webhook combines 2 parameters - `event_action` and `event_object`. E.g., use `*.*` for getting notifications about all events, `create.deal` for any newly added deals, `delete.persons` for any deleted persons, etc. See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks-v2?ref=api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">the guide for Webhooks</a> for more details."
					},
					"response": [
						{
							"name": "The created webhook object",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subscription_url\": \"<string>\",\n  \"event_action\": \"<string>\",\n  \"event_object\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"http_auth_user\": \"<string>\",\n  \"http_auth_password\": \"<string>\",\n  \"version\": \"2.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\",\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 1,\n    \"owner_id\": 1,\n    \"user_id\": 1,\n    \"event_action\": \"added\",\n    \"event_object\": \"activityType\",\n    \"subscription_url\": \"http://example.org\",\n    \"version\": \"2.0\",\n    \"is_active\": 1,\n    \"add_time\": \"2019-10-25T08:25:27.000Z\",\n    \"remove_time\": null,\n    \"type\": \"general\",\n    \"http_auth_user\": null,\n    \"http_auth_password\": null,\n    \"remove_reason\": null,\n    \"last_delivery_time\": null,\n    \"last_http_status\": null,\n    \"admin_id\": 1\n  }\n}"
						},
						{
							"name": "The bad response on webhook creation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subscription_url\": \"<string>\",\n  \"event_action\": \"<string>\",\n  \"event_object\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"http_auth_user\": \"<string>\",\n  \"http_auth_password\": \"<string>\",\n  \"version\": \"2.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"error\",\n  \"success\": false,\n  \"errors\": {\n    \"subscription_url\": [\n      \"invalid or non-reachable URL\"\n    ]\n  }\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subscription_url\": \"<string>\",\n  \"event_action\": \"<string>\",\n  \"event_object\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"http_auth_user\": \"<string>\",\n  \"http_auth_password\": \"<string>\",\n  \"version\": \"2.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						}
					]
				},
				{
					"name": "Delete existing Webhook",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the Webhook to delete"
								}
							]
						},
						"description": "Deletes the specified Webhook."
					},
					"response": [
						{
							"name": "The webhook deletion success response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the Webhook to delete"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\",\n  \"success\": true\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the Webhook to delete"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						},
						{
							"name": "The webhook deletion forbidden response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the Webhook to delete"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Forbidden\"\n}"
						},
						{
							"name": "The webhook deletion not found response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:id?api_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":id"
									],
									"query": [
										{
											"key": "api_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the Webhook to delete"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"error\",\n  \"success\": false,\n  \"errors\": {\n    \"id\": [\n      \"not found\"\n    ]\n  }\n}"
						}
					]
				}
			],
			"description": "See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks-v2?ref=api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">the guide for Webhooks</a> for more information."
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.pipedrive.com/v1"
		}
	]
}