trigger:
  branches:
    include:
      - main
      
variables:
  SECURITY_SCAN_API_BASE: 'https://d180-45-252-74-134.ngrok-free.app/v1/startSecurityScan'
  APPKEYTOKEN: '8654cc52fb15262e5c21d1051746f1c4'
  PROJECT_ID: 'c883d39b-58bb-4158-8123-4d6bb3eb500c'

  BLOCK_PIPELINE: 'true'
  BLOCK_CRITICAL: 'true'
  BLOCK_HIGH: 'true'
  BLOCK_MEDIUM: 'false'
  BLOCK_LOW: 'false'
  BLOCK_INFO: 'false'

pool:
  vmImage: 'windows-latest'

steps:
  - task: PowerShell@2
    displayName: 'Run Security Scan via Curl'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "🔐 Starting Security Scan using curl..."

        $apiUrl = "$(SECURITY_SCAN_API_BASE)/$(PROJECT_ID)"
        Write-Host "Final API URL: $apiUrl"

        $response = & curl.exe --location --request POST "$apiUrl" `
          --header "Content-Type: application/json"

        Write-Host "Scan Response: $response"

        if ($response -match '"message"\s*:\s*"token expired"') {
          throw "Token expired. Blocking pipeline."
        }

        function Extract-Count {
          param ($name)
          if ($response -match "`"$name`"\s*:\s*(\d+)") {
            return [int]$Matches[1]
          }
          return 0
        }

        $critical = Extract-Count 'criticalCount'
        $high     = Extract-Count 'highCount'
        $medium   = Extract-Count 'mediumCount'
        $low      = Extract-Count 'lowCount'
        $info     = Extract-Count 'informationalCount'

        Write-Host "Severity Summary:"
        Write-Host "Critical: $critical"
        Write-Host "High: $high"
        Write-Host "Medium: $medium"
        Write-Host "Low: $low"
        Write-Host "Info: $info"

        if ("$(BLOCK_PIPELINE)" -eq 'true') {
          if ("$(BLOCK_CRITICAL)" -eq 'true' -and $critical -gt 0) {
            throw "Blocked due to criticalCount > 0"
          }
          if ("$(BLOCK_HIGH)" -eq 'true' -and $high -gt 0) {
            throw "Blocked due to highCount > 0"
          }
          if ("$(BLOCK_MEDIUM)" -eq 'true' -and $medium -gt 0) {
            throw "Blocked due to mediumCount > 0"
          }
          if ("$(BLOCK_LOW)" -eq 'true' -and $low -gt 0) {
            throw "Blocked due to lowCount > 0"
          }
          if ("$(BLOCK_INFO)" -eq 'true' -and $info -gt 0) {
            throw "Blocked due to informationalCount > 0"
          }
          Write-Host "No blocking severity found. Continuing pipeline."
        } else {
          Write-Host "BLOCK_PIPELINE is false — skipping severity checks."
        }

  - script: echo "Post-processing complete."
    displayName: 'Post-processing'
